<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:ns2="http://www.mulesoft.org/schema/mule/devkit" xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.mulesoft.org/schema/mule/wiki-pedia" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
  <xs:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"></xs:import>
  <xs:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"></xs:import>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-extension" name="config-type">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractExtensionType">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
          <xs:attribute type="xs:string" use="required" name="name">
            <xs:annotation>
              <xs:documentation>Give a name to this configuration so it can be later referenced by config-ref.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="required" name="username">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute type="xs:string" use="required" name="password">
            <xs:annotation>
              <xs:documentation></xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryType" substitutionGroup="mule:abstract-message-processor" name="query">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki. All data modifications will first
have to use query to acquire a token to prevent abuse from malicious
sites.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output. Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropCategoriesType" substitutionGroup="mule:abstract-message-processor" name="query-prop-categories">
    <xs:annotation>
      <xs:documentation>List all categories the pages belong to.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="clprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get for each category: sortkey Adds the sortkey (hexadecimal string) and sortkey prefix (human-readable part) for the category. timestamp Adds timestamp of when the category was added. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): sortkey, timestamp, hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="clshow">
          <xs:annotation>
            <xs:documentation>- Which kind of categories to show. Values (separate with |): hidden, !hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="cllimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="clcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="clcategories">
          <xs:annotation>
            <xs:documentation>- Only list these categories. Useful for checking whether a certain page is in a certain category. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="cldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropCategoryInfoType" substitutionGroup="mule:abstract-message-processor" name="query-prop-category-info">
    <xs:annotation>
      <xs:documentation>Returns information about the given categories.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropCategoryInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="cicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropContributorsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-contributors">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki. All data modifications will first
have to use query to acquire a token to prevent abuse from malicious
sites.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropContributorsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pcgroup">
          <xs:annotation>
            <xs:documentation>- Only include users in the given groups. Does not include implicit or auto-promoted groups like *, user, or autoconfirmed.Values (separate with |): bot, sysop, bureaucrat, steward, accountcreator, import, transwiki, ipblock-exempt, oversight, rollbacker, propertycreator, wikidata-staff, flood, translationadmin, flow-bot, checkuser, confirmed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pcexcludegroup">
          <xs:annotation>
            <xs:documentation>- Exclude users in the given groups. Does not include implicit or auto-promoted groups like *, user, or autoconfirmed.Values (separate with |): bot, sysop, bureaucrat, steward, accountcreator, import, transwiki, ipblock-exempt, oversight, rollbacker, propertycreator, wikidata-staff, flood, translationadmin, flow-bot, checkuser, confirmed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pcrights">
          <xs:annotation>
            <xs:documentation>- Only include users having the given rights. Does not include rights granted by implicit or auto-promoted groups like *, user, or autoconfirmed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pcexcluderights">
          <xs:annotation>
            <xs:documentation>- Exclude users having the given rights. Does not include rights granted by implicit or auto-promoted groups like *, user, or autoconfirmed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="pclimit">
          <xs:annotation>
            <xs:documentation>- How many contributors to return.No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Get deleted revision information. May be used in several ways: Get
deleted revisions for a set of pages, by setting titles or pageids.
Ordered by title and timestamp. Get data about a set of deleted revisions
by setting their IDs with revids. Ordered by revision ID.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json -</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="drvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned.No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires drvprop=content). For performance reasons, if this option is used, drvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides drvdiffto. If drvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for drvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvuser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drvcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropDuplicateFilesType" substitutionGroup="mule:abstract-message-processor" name="query-prop-duplicate-files">
    <xs:annotation>
      <xs:documentation>List all files that are duplicates of the given files based on hash
values.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropDuplicateFilesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="dflimit">
          <xs:annotation>
            <xs:documentation>- How many duplicate files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="dfcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="dfdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="dflocalonly">
          <xs:annotation>
            <xs:documentation>- Look only for files in the local repository.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropExtLinksType" substitutionGroup="mule:abstract-message-processor" name="query-prop-ext-links">
    <xs:annotation>
      <xs:documentation>Returns all external URLs (not interwikis) from the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropExtLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="ellimit">
          <xs:annotation>
            <xs:documentation>- How many links to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eloffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="elprotocol">
          <xs:annotation>
            <xs:documentation>- Protocol of the URL. If empty and elquery is set, the protocol is http. Leave both this and elquery empty to list all external links. One value: Can be empty, or bitcoin, ftp, ftps, geo, git, gopher, http, https, irc, ircs, magnet, mailto, mms, news, nntp, redis, sftp, sip, sips, sms, ssh, svn, tel, telnet, urn, worldwind, xmpp. Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="elquery">
          <xs:annotation>
            <xs:documentation>- Search string without protocol. Useful for checking whether a certain page contains a certain external url.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="elexpandurl">
          <xs:annotation>
            <xs:documentation>- Expand protocol-relative URLs with the canonical protocol.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropExtractsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-extracts">
    <xs:annotation>
      <xs:documentation>Returns plain-text or limited HTML extracts of the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropExtractsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exchars">
          <xs:annotation>
            <xs:documentation>- How many characters to return. Actual text returned might be slightly longer. The value must be no less than 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exsentences">
          <xs:annotation>
            <xs:documentation>- How many sentences to return.The value must be between 1 and 10.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="exlimit">
          <xs:annotation>
            <xs:documentation>- How many extracts to return.No more than 20 (20 for bots) allowed.Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exintro">
          <xs:annotation>
            <xs:documentation>- Return only content before the first section.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="explaintext">
          <xs:annotation>
            <xs:documentation>- Return extracts as plain text instead of limited HTML.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exsectionformat">
          <xs:annotation>
            <xs:documentation>- How to format sections in plaintext mode: plain No formatting. wiki Wikitext-style formatting (== like this ==). raw This module's internal representation (section titles prefixed with &lt;ASCII 1&gt;&lt;ASCII 2&gt;&lt;section level&gt;&lt;ASCII 2&gt;&lt;ASCII 1&gt;).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="excontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exvariant">
          <xs:annotation>
            <xs:documentation>- Convert content into this language variant.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropFileusageType" substitutionGroup="mule:abstract-message-processor" name="query-prop-fileusage">
    <xs:annotation>
      <xs:documentation>Find all pages that use the given files.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropFileusageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title|redirect" name="fuprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each page. title Title of each page. redirect Flag if the page is a redirect. Values (separate with |): pageid, title, redirect Default: pageid|title|redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="funamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fushow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: redirect Only show redirects. !redirect Only show non-redirects.Values (separate with |): redirect, !redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="fulimit">
          <xs:annotation>
            <xs:documentation>- How many to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fucontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropGlobalUsageType" substitutionGroup="mule:abstract-message-processor" name="query-prop-global-usage">
    <xs:annotation>
      <xs:documentation>Returns global image usage for a certain image.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropGlobalUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="url" name="guprop">
          <xs:annotation>
            <xs:documentation>- Which properties to return: url Adds url. pageid Adds page ID. namespace Adds namespace ID. Values (separate with |): url, pageid, namespace. Default: url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gulimit">
          <xs:annotation>
            <xs:documentation>- How many links to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gucontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gufilterlocal">
          <xs:annotation>
            <xs:documentation>- Filter local usage of the file.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropImageInfoType" substitutionGroup="mule:abstract-message-processor" name="query-prop-image-info">
    <xs:annotation>
      <xs:documentation>Returns file information and upload history.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropImageInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iiprop">
          <xs:annotation>
            <xs:documentation>- Which file information to get:</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iilimit">
          <xs:annotation>
            <xs:documentation>- How many file revisions to return per file. timestamp,user,userid ,comment,parsedcomment,canonicaltitle,url, size,dimensions,sha1,mime thumbmime,mediatype,metadata,commonmetadata ,extmetadata,archivename,bitdepth,uploadwarning</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iistart">
          <xs:annotation>
            <xs:documentation>- Timestamp to start listing from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iiend">
          <xs:annotation>
            <xs:documentation>- Timestamp to stop listing at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="iiurlwidth">
          <xs:annotation>
            <xs:documentation>- If iiprop=url is set, a URL to an image scaled to this width will be returned. For performance reasons if this option is used, no more than 50 scaled images will be returned. Default: -1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="iiurlheight">
          <xs:annotation>
            <xs:documentation>- Similar to iiurlwidth.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="iimetadataversion">
          <xs:annotation>
            <xs:documentation>- Version of metadata to use. If latest is specified, use latest version. Defaults to 1 for backwards compatibility.Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="en" name="iiextmetadatalanguage">
          <xs:annotation>
            <xs:documentation>- What language to fetch extmetadata in. This affects both which translation to fetch, if multiple are available, as well as how things like numbers and various values are formatted. Default: en</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iiextmetadatamultilang">
          <xs:annotation>
            <xs:documentation>- If translations for extmetadata property are available, fetch all of them.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iiextmetadatafilter">
          <xs:annotation>
            <xs:documentation>- If specified and non-empty, only these keys will be returned for iiprop=extmetadata. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iiurlparam">
          <xs:annotation>
            <xs:documentation>- A handler specific parameter string. For example, PDFs might use page15-100px. iiurlwidth must be used and be consistent with iiurlparam.Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iilocalonly">
          <xs:annotation>
            <xs:documentation>- Look only for files in the local repository.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropImagesType" substitutionGroup="mule:abstract-message-processor" name="query-prop-images">
    <xs:annotation>
      <xs:documentation>Returns all files contained on the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="imlimit">
          <xs:annotation>
            <xs:documentation>- How many files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="imcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="imimages">
          <xs:annotation>
            <xs:documentation>- Only list these files. Useful for checking whether a certain page has a certain file. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="imdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropInfoType" substitutionGroup="mule:abstract-message-processor" name="query-prop-info">
    <xs:annotation>
      <xs:documentation>Get basic page information.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="inprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get: protection List the protection level of each page. talkid The page ID of the talk page for each non-talk page. watched List the watched status of each page. watchers The number of watchers, if allowed. notificationtimestamp The watchlist notification timestamp of each page. subjectid The page ID of the parent page for each talk page. url Gives a full URL, an edit URL, and the canonical URL for each page. readable Whether the user can read this page. preload Gives the text returned by EditFormPreloadText. displaytitle Gives the way the page title is actually displayed. Values (separate with |): protection, talkid, watched, watchers, notificationtimestamp, subjectid, url, readable, preload, displaytitle</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="intestactions">
          <xs:annotation>
            <xs:documentation>- Test whether the current user can perform certain actions on the page. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="incontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropIwLinksType" substitutionGroup="mule:abstract-message-processor" name="query-prop-iw-links">
    <xs:annotation>
      <xs:documentation>Returns all interwiki links from the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropIwLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get for each interlanguage link: url Adds the full URL. Values (separate with |): url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwprefix">
          <xs:annotation>
            <xs:documentation>- Only return interwiki links with this prefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwtitle">
          <xs:annotation>
            <xs:documentation>- Interwiki link to search for. Must be used with iwprefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="iwdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="iwlimit">
          <xs:annotation>
            <xs:documentation>- How many interwiki links to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryProplanglinksType" substitutionGroup="mule:abstract-message-processor" name="query-proplanglinks">
    <xs:annotation>
      <xs:documentation>Returns all interlanguage links from the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryProplanglinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="llprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get for each interlanguage link: url Adds the full URL. langname Adds the localised language name (best effort). Use llinlanguagecode to control the language. autonym Adds the native language name. Values (separate with |): url, langname, autonym</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lllang">
          <xs:annotation>
            <xs:documentation>- Only return language links with this language code.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lltitle">
          <xs:annotation>
            <xs:documentation>- Link to search for. Must be used with lllang.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="lldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="llinlanguagecode">
          <xs:annotation>
            <xs:documentation>- Language code for localised language names.Default: en</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="lllimit">
          <xs:annotation>
            <xs:documentation>- How many langlinks to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="llcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryProplinksType" substitutionGroup="mule:abstract-message-processor" name="query-proplinks">
    <xs:annotation>
      <xs:documentation>Returns all links from the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryProplinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="plnamespace">
          <xs:annotation>
            <xs:documentation>- Show links in these namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="pllimit">
          <xs:annotation>
            <xs:documentation>- How many links to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="plcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pltitles">
          <xs:annotation>
            <xs:documentation>- Only list links to these titles. Useful for checking whether a certain page links to a certain title. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="pldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropLinkShereType" substitutionGroup="mule:abstract-message-processor" name="query-prop-link-shere">
    <xs:annotation>
      <xs:documentation>Find all pages that link to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropLinkShereType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title|redirect" name="lhprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each page. title Title of each page. redirect Flag if the page is a redirect. Values (separate with |): pageid, title, redirect Default: pageid|title|redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lhnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lhshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: redirect Only show redirects. !redirect Only show non-redirects. Values (separate with |): redirect, !redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="lhlimit">
          <xs:annotation>
            <xs:documentation>- How many to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lhcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropPageImagesType" substitutionGroup="mule:abstract-message-processor" name="query-prop-page-images">
    <xs:annotation>
      <xs:documentation>Returns information about images on the page, such as thumbnail and
presence of photos.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropPageImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="thumbnail|name" name="piprop">
          <xs:annotation>
            <xs:documentation>- Which information to return: thumbnail URL and dimensions of image associated with page, if any. name Image title. Values (separate with |): thumbnail, name, original Default: thumbnail|name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="50" name="pithumbsize">
          <xs:annotation>
            <xs:documentation>- Maximum thumbnail dimension. Default: 50</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="pilimit">
          <xs:annotation>
            <xs:documentation>- Properties of how many pages to return. No more than 50 (100 for bots) allowed. Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="picontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropPagePropsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-page-props">
    <xs:annotation>
      <xs:documentation>Get various properties defined in the page content.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropPagePropsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ppcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ppprop">
          <xs:annotation>
            <xs:documentation>- Only list these props. Useful for checking whether a certain page uses a certain page prop. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropPageTermsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-page-terms">
    <xs:annotation>
      <xs:documentation>Get terms associated with a page via an associated data item.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropPageTermsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wbptcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wbptterms">
          <xs:annotation>
            <xs:documentation>- The types of terms to get, e.g. 'description'. If not specified, all types are returned. Values (separate with |): alias, description, label</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropRedirectsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-redirects">
    <xs:annotation>
      <xs:documentation>Returns all redirects to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title" name="rdprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each redirect. title Title of each redirect. fragment Fragment of each redirect, if any. Values (separate with |): pageid, title, fragment Default: pageid|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rdnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Note: Due to miser mode, using this may result in fewer than rdlimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rdshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: fragment Only show redirects with a fragment. !fragment Only show redirects without a fragment. Values (separate with |): fragment, !fragment</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="rdlimit">
          <xs:annotation>
            <xs:documentation>- How many redirects to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rdcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-prop-revisions">
    <xs:annotation>
      <xs:documentation>Get revision information. May be used in several ways: Get data about a
set of pages (last revision), by setting titles or pageids. Get revisions
for one given page, by using titles or pageids with start, end, or limit.
Get data about a set of revisions by setting their IDs with revids.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="rvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned. May only be used with a single page (mode #2). No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires rvprop=content). For performance reasons, if this option is used, rvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides rvdiffto. If rvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for rvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvstartid">
          <xs:annotation>
            <xs:documentation>- From which revision ID to start enumeration.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvendid">
          <xs:annotation>
            <xs:documentation>- Stop revision enumeration on this revision ID. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvstart">
          <xs:annotation>
            <xs:documentation>- From which revision timestamp to start enumeration. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvend">
          <xs:annotation>
            <xs:documentation>- Enumerate up to this timestamp. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="rvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rvstart has to be before rvend. older List newest first (default). Note: rvstart has to be later than rvend. May only be used with a single page (mode #2). One value: newer, older.Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvuser">
          <xs:annotation>
            <xs:documentation>- Only include revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Exclude revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rvcontinue">
          <xs:annotation>
            <xs:documentation>- hen more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropStashImageinfoType" substitutionGroup="mule:abstract-message-processor" name="query-prop-stash-imageinfo">
    <xs:annotation>
      <xs:documentation>Returns file information for stashed files.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropStashImageinfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="siifilekey">
          <xs:annotation>
            <xs:documentation>- Key that identifies a previous upload that was stashed temporarily. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|url" name="siiprop">
          <xs:annotation>
            <xs:documentation>- Which file information to get: timestamp Adds timestamp for the uploaded version. canonicaltitle Adds the canonical title of the file. url Gives URL to the file and the description page. size Adds the size of the file in bytes and the height, width and page count (if applicable). dimensions Alias for size. sha1 Adds SHA-1 hash for the file. mime Adds MIME type of the file. thumbmime Adds MIME type of the image thumbnail (requires url and param siiurlwidth). metadata Lists Exif metadata for the version of the file. commonmetadata Lists file format generic metadata for the version of the file. extmetadata Lists formatted metadata combined from multiple sources. Results are HTML formatted. bitdepth Adds the bit depth of the version. Values (separate with |): timestamp, canonicaltitle, url, size, dimensions, sha1, mime, thumbmime, metadata, commonmetadata, extmetadata, bitdepth Default: timestamp|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="siiurlwidth">
          <xs:annotation>
            <xs:documentation>- If siiprop=url is set, a URL to an image scaled to this width will be returned. For performance reasons if this option is used, no more than 50 scaled images will be returned. Default: -1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="siiurlheight">
          <xs:annotation>
            <xs:documentation>- Similar to siiurlwidth.Default: -1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="siiurlparam">
          <xs:annotation>
            <xs:documentation>- A handler specific parameter string. For example, PDFs might use page15-100px. siiurlwidth must be used and be consistent with siiurlparam.Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropTemplatesType" substitutionGroup="mule:abstract-message-processor" name="query-prop-templates">
    <xs:annotation>
      <xs:documentation>Returns all pages transcluded on the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropTemplatesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tlnamespace">
          <xs:annotation>
            <xs:documentation>- how templates in this namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="tllimit">
          <xs:annotation>
            <xs:documentation>- How many templates to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tltemplates">
          <xs:annotation>
            <xs:documentation>- Only list these templates. Useful for checking whether a certain page uses a certain template. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="tldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropTranscludedinType" substitutionGroup="mule:abstract-message-processor" name="query-prop-transcludedin">
    <xs:annotation>
      <xs:documentation>Find all pages that transclude the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropTranscludedinType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title|redirect" name="tiprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each page. title Title of each page. redirect Flag if the page is a redirect. Values (separate with |): pageid, title, redirect Default: pageid|title|redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tinamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tishow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: redirect Only show redirects. !redirect Only show non-redirects.Values (separate with |): redirect, !redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="tilimit">
          <xs:annotation>
            <xs:documentation>- How many to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ticontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryPropVideoInfoType" substitutionGroup="mule:abstract-message-processor" name="query-prop-video-info">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with prop=videoinfo which Extends
imageinfo to include video source (derivatives) information</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryPropVideoInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which lists to get. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|user" name="viprop">
          <xs:annotation>
            <xs:documentation>- What video information to get: timestamp,user,userid,comment, parsedcomment,canonicaltitle,url,size,dimensions,sha1,mime thumbmime ,mediatype,metadata,commonmetadata,extmetadata,archivename ,bitdepth,uploadwarning,derivatives. Values (separate with |): timestamp, user, userid, comment, parsedcomment, canonicaltitle, url, size, dimensions, sha1, mime, thumbmime, mediatype, metadata, commonmetadata, extmetadata, archivename, bitdepth, uploadwarning, derivatives Default: timestamp|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="vilimit">
          <xs:annotation>
            <xs:documentation>- How many file revisions to return per file.No more than 500 (5,000 for bots) allowed. Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="vistart">
          <xs:annotation>
            <xs:documentation>- Timestamp to start listing from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="viend">
          <xs:annotation>
            <xs:documentation>- Timestamp to stop listing at..</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="viurlwidth">
          <xs:annotation>
            <xs:documentation>- If viprop=url is set, a URL to an image scaled to this width will be returned. For performance reasons if this option is used, no more than 50 scaled images will be returned. Default: -1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="-1" name="viurlheight">
          <xs:annotation>
            <xs:documentation>- Similar to viurlwidth.Default: -1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="viurlparam">
          <xs:annotation>
            <xs:documentation>- A handler specific parameter string. For example, PDFs might use page15-100px. viurlwidth must be used and be consistent with viurlparam.Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="vicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAbuseFiltersType" substitutionGroup="mule:abstract-message-processor" name="query-list-abuse-filters">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=abusefilters which Show
details of the abuse filters</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAbuseFiltersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="abfstartid">
          <xs:annotation>
            <xs:documentation>- The filter ID to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="abfendid">
          <xs:annotation>
            <xs:documentation>- The filter ID to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="newer" name="abfdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: abfstart has to be before abfend. older List newest first (default). Note: abfstart has to be later than abfend. One value: older, newer Default: newer</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="abfshow">
          <xs:annotation>
            <xs:documentation>- Show only filters which meet these criteria.  Values (separate with |): enabled, !enabled, deleted, !deleted, private, !private</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="abflimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="id|description|actions|status" name="abfprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get.  Values (separate with |): id, description, pattern, actions, hits, comments, lasteditor, lastedittime, status, private Default: id|description|actions|status</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAbuseLogType" substitutionGroup="mule:abstract-message-processor" name="query-list-abuse-log">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=abusefilters which Show
details of the abuse filters</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAbuseLogType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aflstart">
          <xs:annotation>
            <xs:documentation>- The filter ID to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aflend">
          <xs:annotation>
            <xs:documentation>- The filter ID to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="afldir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: abfstart has to be before abfend. older List newest first (default). Note: abfstart has to be later than abfend. One value: older, newer Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afluser">
          <xs:annotation>
            <xs:documentation>- Show only entries done by a given user or IP address.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afltitle">
          <xs:annotation>
            <xs:documentation>- Show only entries occurring on a given page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aflfilter">
          <xs:annotation>
            <xs:documentation>- Show only entries that were caught by a given filter ID.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="afllimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|user|title|action|result|timestamp|hidden|revid" name="aflprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get.  Values (separate with |): ids, filter, user, ip, title, action, details, result, timestamp, hidden, revid Default: ids|user|title|action|result|timestamp|hidden|revid</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllCategoriesType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-categories">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allcategories which
Enumerate all categories</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acfrom">
          <xs:annotation>
            <xs:documentation>- The category to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="accontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acto">
          <xs:annotation>
            <xs:documentation>- The category to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acprefix">
          <xs:annotation>
            <xs:documentation>- Search for all category titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="acdir">
          <xs:annotation>
            <xs:documentation>- Direction to sort in. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acmin">
          <xs:annotation>
            <xs:documentation>- Only return categories with at least this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acmax">
          <xs:annotation>
            <xs:documentation>- Only return categories with at most this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="aclimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="acprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: size Adds number of pages in the category. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): size, hidden Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=alldeletedrevisions which
List all deleted revisions by a user or in a namespace</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="adrprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrexpandtemplates">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrgeneratexml">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrparse">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrsection">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrdiffto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrdifftotext">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrcontentformat">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adruser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrstart">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrend">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="adrdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrfrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrexcludeuser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrtag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="adrgeneratetitles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllFileuUsagesType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-fileu-usages">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allfileusages which List
all file usages, including non-existing</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllFileuUsagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="affrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="afunique">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="afprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="aflimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="afdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllImagesType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-images">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allimages which Enumerate
all images sequentially</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="aisort">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="aidir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aifrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aito">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aicontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aistart">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aiend">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|url" name="aiprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aiprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aiminsize">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aimaxsize">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aisha1">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aisha1base36">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aiuser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="aifilterbots">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aimime">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ailimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllLinksType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=alllinks which Enumerate
all links that point to a given namespace</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="alcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="alfrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="alto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="alprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="alunique">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="alprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="alnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="allimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="aldir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllPagesType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-pages">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allpages which Enumerate
all pages sequentially in a given namespace</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllPagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apfrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="apnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="apfilterredir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apminsize">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apmaxsize">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apprtype">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="apprlevel">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="apprfiltercascade">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="aplimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="apdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="apfilterlanglinks">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="apprexpiry">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllRedirectsType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-redirects">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allredirects which List all
redirects to a namespace</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="arcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="arfrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="arto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="arprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="arunique">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="arprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="arnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="arlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="ardir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllTransclusionsType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-transclusions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=alltransclusions which List
all transclusions (pages embedded using {{x), including non-existing</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllTransclusionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="atcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="atfrom">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="atto">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="atprefix">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="atunique">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="atprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="atnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="atlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="atdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListAllUsersType" substitutionGroup="mule:abstract-message-processor" name="query-list-all-users">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=allusers which Enumerate
all registered users</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListAllUsersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aufrom">
          <xs:annotation>
            <xs:documentation>- The user name to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auto">
          <xs:annotation>
            <xs:documentation>- The user name to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auprefix">
          <xs:annotation>
            <xs:documentation>- Search for all users that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="audir">
          <xs:annotation>
            <xs:documentation>- Direction to sort in.  One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="augroup">
          <xs:annotation>
            <xs:documentation>- Only include users in the given groups.  Values (separate with |): bot, sysop, bureaucrat, steward, accountcreator, import, transwiki, ipblock-exempt, oversight, rollbacker, propertycreator, wikidata-staff, flood, translationadmin, flow-bot, checkuser, confirmed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auexcludegroup">
          <xs:annotation>
            <xs:documentation>- Exclude users in the given groups.  Values (separate with |): bot, sysop, bureaucrat, steward, accountcreator, import, transwiki, ipblock-exempt, oversight, rollbacker, propertycreator, wikidata-staff, flood, translationadmin, flow-bot, checkuser, confirmed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aurights">
          <xs:annotation>
            <xs:documentation>- Only include users with the given rights. Does not include rights granted by implicit or auto-promoted groups like *, user, or autoconfirmed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include:  blockinfo Adds the information about a current block on the user. groups Lists groups that the user is in. This uses more server resources and may return fewer results than the limit. implicitgroups Lists all the groups the user is automatically in. rights Lists rights that the user has. editcount Adds the edit count of the user. registration Adds the timestamp of when the user registered if available (may be blank). Values (separate with |): blockinfo, groups, implicitgroups, rights, editcount, registration</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="aulimit">
          <xs:annotation>
            <xs:documentation>- How many total user names to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auwitheditsonly">
          <xs:annotation>
            <xs:documentation>- Only list users who have made edits.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="auactiveusers">
          <xs:annotation>
            <xs:documentation>- Only list users active in the last 30 days.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListBackLinksType" substitutionGroup="mule:abstract-message-processor" name="query-list-back-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=backlinks which Find all
pages that link to the given page.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bltitle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with gblpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="blpageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with bltitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="blcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="blnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="bldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="blfilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when blredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="bllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If blredirect is enabled, limit applies to each level separately (which means up to 2 * bllimit results may be returned). No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="blredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListBetaFeaturesType" substitutionGroup="mule:abstract-message-processor" name="query-list-beta-features">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=betafeatures which List all
BetaFeatures</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListBetaFeaturesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bfcounts">
          <xs:annotation>
            <xs:documentation>- Whether to fetch how many users have enabled a certain preference.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListblocksType" substitutionGroup="mule:abstract-message-processor" name="query-listblocks">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=blocks which List all
blocked users and IP addresses</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListblocksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="bkdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: bkstart has to be before bkend. older List newest first (default). Note: bkstart has to be later than bkend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkids">
          <xs:annotation>
            <xs:documentation>- List of block IDs to list (optional).  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkusers">
          <xs:annotation>
            <xs:documentation>- List of users to search for (optional).  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkip">
          <xs:annotation>
            <xs:documentation>- Get all blocks applying to this IP or CIDR range, including range blocks. Cannot be used together with bkusers. CIDR ranges broader than IPv4/16 or IPv6/19 are not accepted.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="bklimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of blocks to list.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="id|user|by|timestamp|expiry|reason|flags" name="bklbkpropimit">
          <xs:annotation>
            <xs:documentation>- Which properties to get:  id Adds the ID of the block. user Adds the username of the blocked user. userid Adds the user ID of the blocked user. by Adds the username of the blocking user. byid Adds the user ID of the blocking user. timestamp Adds the timestamp of when the block was given. expiry Adds the timestamp of when the block expires. reason Adds the reason given for the block. range Adds the range of IP addresses affected by the block. flags Tags the ban with (autoblock, anononly, etc.). Values (separate with |): id, user, userid, by, byid, timestamp, expiry, reason, range, flags Default: id|user|by|timestamp|expiry|reason|flags</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only indefinite blocks on IP addresses, set bkshow=ip|!temp.  Values (separate with |): account, !account, temp, !temp, ip, !ip, range, !range</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bkcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListCategoryMembersType" substitutionGroup="mule:abstract-message-processor" name="query-list-category-members">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=categorymembers which List
all pages in a given category</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListCategoryMembersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmtitle">
          <xs:annotation>
            <xs:documentation>- Which category to enumerate (required). Must include the Category: prefix. Cannot be used together with gcmpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmpageid">
          <xs:annotation>
            <xs:documentation>- Page ID of the category to enumerate. Cannot be used together with cmtitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="cmprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. sortkey Adds the sortkey used for sorting in the category (hexadecimal string). sortkeyprefix Adds the sortkey prefix used for sorting in the category (human-readable part of the sortkey). type Adds the type that the page has been categorised as (page, subcat or file). timestamp Adds the timestamp of when the page was included. Values (separate with |): ids, title, sortkey, sortkeyprefix, type, timestamp Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Note that cmtype=subcat or cmtype=file may be used instead of cmnamespace=14 or 6. Note: Due to miser mode, using this may result in fewer than cmlimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmtype">
          <xs:annotation>
            <xs:documentation>- Which type of category members to include. Ignored when cmsort=timestamp is set. Values (separate with |): page, subcat, file Default: page|subcat|file</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmlimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of pages to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmsort">
          <xs:annotation>
            <xs:documentation>- Property to sort by. One value: sortkey, timestamp.Default: sortkey</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmdir">
          <xs:annotation>
            <xs:documentation>- In which direction to sort. One value: asc, desc, ascending, descending, newer, older Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmstart">
          <xs:annotation>
            <xs:documentation>- Timestamp to start listing from. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmend">
          <xs:annotation>
            <xs:documentation>- Timestamp to end listing at. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmstarthexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to start listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmendhexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to end listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmstartsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to start listing from. Can only be used with cmsort=sortkey. Overrides gcmstarthexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cmendsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to end listing BEFORE (not at, if this value occurs it will not be included!). Can only be used with gcmsort=sortkey. Overrides gcmendhexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListCentralNoticeLogsType" substitutionGroup="mule:abstract-message-processor" name="query-list-central-notice-logs">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=centralnoticelogs which Get
a log of campaign configuration changes.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListCentralNoticeLogsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="campaign">
          <xs:annotation>
            <xs:documentation>- Campaign name (optional). Separate multiple values with a "|" (vertical bar).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="user">
          <xs:annotation>
            <xs:documentation>- Username (optional).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="50" name="limit">
          <xs:annotation>
            <xs:documentation>- Maximum rows to return (optional).  No more than 500 (5,000 for bots) allowed. Default: 50</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="offset">
          <xs:annotation>
            <xs:documentation>- Offset into result set (optional).  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="start">
          <xs:annotation>
            <xs:documentation>- Start time of range (optional).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="end">
          <xs:annotation>
            <xs:documentation>-End time of range (optional).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListCheckUserType" substitutionGroup="mule:abstract-message-processor" name="query-list-check-user">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=checkuser which Check which
IP addresses are used by a given username or which usernames are used by
a given IP address</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListCheckUserType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="curequest">
          <xs:annotation>
            <xs:documentation>- Type of CheckUser request:  userips Get IP address of target user. edits Get changes from target IP address or range. ipusers Get users from target IP address or range. This parameter is required. One value: userips, edits, ipusers</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="cutarget">
          <xs:annotation>
            <xs:documentation>- Username, IP address, or CIDR range to check.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cureason">
          <xs:annotation>
            <xs:documentation>- Reason to check.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1000" name="culimit">
          <xs:annotation>
            <xs:documentation>- Limit of rows.  No more than 500 (5,000 for bots) allowed. Default: 1000</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="2 weeks" name="cutimecond">
          <xs:annotation>
            <xs:documentation>- Time limit of user data (like "2 weeks").  Default: -2 weeks</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cuxff">
          <xs:annotation>
            <xs:documentation>- Use XFF data instead of IP address.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="cutoken">
          <xs:annotation>
            <xs:documentation>- A "csrf" token retrieved from action=query&amp;meta=tokens  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.* @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListCheckUserLogType" substitutionGroup="mule:abstract-message-processor" name="query-list-check-user-log">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=checkuserlog which Check
which Get entries from the CheckUser log</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListCheckUserLogType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="culuser">
          <xs:annotation>
            <xs:documentation>- Username of the CheckUser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="cultarget">
          <xs:annotation>
            <xs:documentation>- Checked user, IP address, or CIDR range.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="cullimit">
          <xs:annotation>
            <xs:documentation>- Limit of rows.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="culdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: culstart has to be before culend. older List newest first (default). Note: culstart has to be later than culend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="culfrom">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="culto">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="culcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.* @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListdeletedrevsType" substitutionGroup="mule:abstract-message-processor" name="query-listdeletedrevs">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=deletedrevs List deleted
revisions.

Operates in three modes:

List deleted revisions for the given titles, sorted by timestamp. List
deleted contributions for the given user, sorted by timestamp (no titles
specified). List all deleted revisions in the given namespace, sorted by
title and timestamp (no titles specified, druser not set). Certain
parameters only apply to some modes and are ignored in others.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListdeletedrevsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.  Modes: 1, 2</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at.  Modes: 1, 2</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="drdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: drstart has to be before drend. older List newest first (default). Note: drstart has to be later than drend. Modes: 1, 3 One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drfrom">
          <xs:annotation>
            <xs:documentation>- Start listing at this title.  Mode: 3</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drto">
          <xs:annotation>
            <xs:documentation>- Stop listing at this title.  Mode: 3</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drprefix">
          <xs:annotation>
            <xs:documentation>- Search for all page titles that begin with this value.  Mode: 3</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drunique">
          <xs:annotation>
            <xs:documentation>- List only one revision for each page.  Mode: 3</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="drnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in this namespace.  Mode: 3 One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="druser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user|comment" name="drprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get:  revid Adds the revision ID of the deleted revision. parentid Adds the revision ID of the previous revision to the page. user Adds the user who made the revision. userid Adds the user ID whom made the revision. comment Adds the comment of the revision. parsedcomment Adds the parsed comment of the revision. minor Tags if the revision is minor. len Adds the length (bytes) of the revision. sha1 Adds the SHA-1 (base 16) of the revision. content Adds the content of the revision. token Deprecated. Gives the edit token. tags Tags for the revision. Values (separate with |): revid, parentid, user, userid, comment, parsedcomment, minor, len, sha1, content, token, tags Default: user|comment</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="drlimit">
          <xs:annotation>
            <xs:documentation>- The maximum amount of revisions to list.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="drcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListEmbeddedInType" substitutionGroup="mule:abstract-message-processor" name="query-list-embedded-in">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=embeddedin which Find all
pages that embed (transclude) the given title.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListEmbeddedInType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eititle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with geipageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eipageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with geititle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="einamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eidir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eifilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. One value: all, redirects, nonredirects Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eilimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListExturlusageType" substitutionGroup="mule:abstract-message-processor" name="query-list-exturlusage">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=exturlusage which Enumerate
pages that contain a given URL.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListExturlusageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="euprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the ID of page. title Adds the title and namespace ID of the page. url Adds the URL used in the page. Values (separate with |): ids, title, url Default: ids|title|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="euoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="euprotocol">
          <xs:annotation>
            <xs:documentation>- Protocol of the URL. If empty and euquery set, the protocol is http. Leave both this and euquery empty to list all external links. One value: Can be empty, or bitcoin, ftp, ftps, geo, git, gopher, http, https, irc, ircs, magnet, mailto, mms, news, nntp, redis, sftp, sip, sips, sms, ssh, svn, tel, telnet, urn, worldwind, xmpp Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="euquery">
          <xs:annotation>
            <xs:documentation>- Search string without protocol. See Special:LinkSearch. Leave empty to list all external links.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eunamespace">
          <xs:annotation>
            <xs:documentation>- The page namespaces to enumerate. Note: Due to miser mode, using this may result in fewer than eulimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="eulimit">
          <xs:annotation>
            <xs:documentation>- How many pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="euexpandurl">
          <xs:annotation>
            <xs:documentation>- Expand protocol-relative URLs with the canonical protocol.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListFileArchiveType" substitutionGroup="mule:abstract-message-processor" name="query-list-file-archive">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=filearchive which Enumerate
all deleted files sequentially.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListFileArchiveType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fafrom">
          <xs:annotation>
            <xs:documentation>- The image title to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fato">
          <xs:annotation>
            <xs:documentation>- The image title to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="faprefix">
          <xs:annotation>
            <xs:documentation>- Search for all image titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="fadir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.  One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fasha1">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image. Overrides fasha1base36.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="fasha1base36">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image in base 36 (used in MediaWiki).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp" name="faprop">
          <xs:annotation>
            <xs:documentation>- Which image information to get:  sha1 Adds SHA-1 hash for the image. timestamp Adds timestamp for the uploaded version. user Adds user who uploaded the image version. size Adds the size of the image in bytes and the height, width and page count (if applicable). dimensions Alias for size. description Adds description the image version. parseddescription Parse the description on the version. mime Adds MIME of the image. mediatype Adds the media type of the image. metadata Lists Exif metadata for the version of the image. bitdepth Adds the bit depth of the version. archivename Adds the filename of the archive version for non-latest versions. Values (separate with |): sha1, timestamp, user, size, dimensions, description, parseddescription, mime, mediatype, metadata, bitdepth, archivename Default: timestamp</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="falimit">
          <xs:annotation>
            <xs:documentation>- How many images to return in total.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="facontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListGadgetCategoriesType" substitutionGroup="mule:abstract-message-processor" name="query-list-gadget-categories">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=gadgetcategories which
Returns a list of gadget categories.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListGadgetCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="gcprop">
          <xs:annotation>
            <xs:documentation>- What gadget category information to get:  name Internal category name. title Category title. members Number of gadgets in category. Values (separate with |): name, title, members Default: name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcnames">
          <xs:annotation>
            <xs:documentation>- Names of categories to retrieve.  Separate values with |. Maximum number of values is 50 (500 for bots)..</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListGadgetsType" substitutionGroup="mule:abstract-message-processor" name="query-list-gadgets">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=gadgets which Returns a
list of gadgets used on this wiki.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListGadgetsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="id|metadata" name="gaprop">
          <xs:annotation>
            <xs:documentation>- What gadget information to get:  id Internal gadget ID. metadata The gadget metadata. desc Gadget description transformed into HTML (can be slow, use only if really needed). Values (separate with |): id, metadata, desc Default: id|metadata</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacategories">
          <xs:annotation>
            <xs:documentation>- Gadgets from what categories to retrieve.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaids">
          <xs:annotation>
            <xs:documentation>- IDs of gadgets to retrieve.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaallowedonly">
          <xs:annotation>
            <xs:documentation>- List only gadgets allowed to current user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaenabledonly">
          <xs:annotation>
            <xs:documentation>- List only gadgets enabled by current user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListGlobalAllUsersType" substitutionGroup="mule:abstract-message-processor" name="query-list-global-all-users">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=globalallusers which
Enumerate all global users.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListGlobalAllUsersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="agufrom">
          <xs:annotation>
            <xs:documentation>- The user name to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aguto">
          <xs:annotation>
            <xs:documentation>- The user name to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aguprefix">
          <xs:annotation>
            <xs:documentation>- Search for all users that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="agudir">
          <xs:annotation>
            <xs:documentation>- Direction to sort in.  One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="agugroup">
          <xs:annotation>
            <xs:documentation>- Limit users to given global groups.  Values (separate with |): OTRS-member, WMF_Ops_Monitoring, abusefilter-helper, apihighlimits-requestor, captcha-exempt, delete-global, founder, global-bot, global-deleted-image-review, global-gather-admins, global-interface-editor, global-ipblock-exempt, global-rollbacker, global-sysop, new-wikis-importer, ombudsman, recursive-export, staff, steward, sysadmin, wmf-researcher</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aguexcludegroup">
          <xs:annotation>
            <xs:documentation>- Exclude users in given global groups.  Values (separate with |): OTRS-member, WMF_Ops_Monitoring, abusefilter-helper, apihighlimits-requestor, captcha-exempt, delete-global, founder, global-bot, global-deleted-image-review, global-gather-admins, global-interface-editor, global-ipblock-exempt, global-rollbacker, global-sysop, new-wikis-importer, ombudsman, recursive-export, staff, steward, sysadmin, wmf-researcher</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="aguprop">
          <xs:annotation>
            <xs:documentation>- What pieces of information to include:  lockinfo Whether the user account is locked. groups Lists global groups that the user is in. This uses more server resources and may return fewer results than the limit. existslocally Adds the information if the user exists locally. Values (separate with |): lockinfo, groups, existslocally</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="agulimit">
          <xs:annotation>
            <xs:documentation>- How many total user names to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListGlobalBlocksType" substitutionGroup="mule:abstract-message-processor" name="query-list-global-blocks">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=globalblocks which List all
globally blocked IP addresses.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListGlobalBlocksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bgstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bgend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="bgdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: bgstart has to be before bgend. older List newest first (default). Note: bgstart has to be later than bgend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bgids">
          <xs:annotation>
            <xs:documentation>- Pipe-separated list of block IDs to list.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bgaddresses">
          <xs:annotation>
            <xs:documentation>- Pipe-separated list of IP addresses to search for.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="bgip">
          <xs:annotation>
            <xs:documentation>- Get all blocks applying to this IP address or CIDR range, including range blocks. Cannot be used together with bgusers. CIDR ranges broader than /16 are not accepted.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="bglimit">
          <xs:annotation>
            <xs:documentation>- The maximum amount of blocks to list.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="id|address|by|timestamp|expiry|reason" name="bgprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get.  Values (separate with |): id, address, by, timestamp, expiry, reason, range Default: id|address|by|timestamp|expiry|reason  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListGlobalGroupsType" substitutionGroup="mule:abstract-message-processor" name="query-list-global-groups">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=globalgroups which
Enumerate all global groups..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListGlobalGroupsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ggpprop">
          <xs:annotation>
            <xs:documentation>- TWhat pieces of information to include.  Values (separate with |): rights.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListImageUsageType" substitutionGroup="mule:abstract-message-processor" name="query-list-image-usage">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=imageusage which Find all
pages that use the given image title.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListImageUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iutitle">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iupageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with iutitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iucontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iunamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iudir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iufilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when iuredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects.Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iulimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If iuredirect is enabled, the limit applies to each level separately (which means up to 2 * iulimit results may be returned). No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iuredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListIwBackLinksType" substitutionGroup="mule:abstract-message-processor" name="query-list-iw-back-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=iwbacklinks which Find all
pages that link to the given interwiki link.

Can be used to find all links with a prefix, or all links to a title
(with a given prefix). Using neither parameter is effectively
"all interwiki links".</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListIwBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwblprefix">
          <xs:annotation>
            <xs:documentation>- Prefix for the interwiki.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwbltitle">
          <xs:annotation>
            <xs:documentation>- Interwiki link to search for. Must be used with giwblblprefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: iwprefix Adds the prefix of the interwiki. iwtitle Adds the title of the interwiki. Values (separate with |): iwprefix, iwtitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListlangbacklinksType" substitutionGroup="mule:abstract-message-processor" name="query-listlangbacklinks">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=langbacklinks which Find
all pages that link to the given language link

Can be used to find all links with a language code, or all links to a
title (with a given language). Using neither parameter is effectively
"all language links".

Note that this may not consider language links added by extensions.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListlangbacklinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lbllang">
          <xs:annotation>
            <xs:documentation>- Language for the language link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lbltitle">
          <xs:annotation>
            <xs:documentation>- Language link to search for. Must be used with lbllang.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: lllang Adds the language code of the language link. lltitle Adds the title of the language link. Values (separate with |): lllang, lltitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListLogEventsType" substitutionGroup="mule:abstract-message-processor" name="query-list-log-events">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=logevents which Get events
from logs.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListLogEventsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="leprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get:  ids Adds the ID of the log event. title Adds the title of the page for the log event. type Adds the type of log event. user Adds the user responsible for the log event. userid Adds the user ID who was responsible for the log event. timestamp Adds the timestamp for the event. comment Adds the comment of the event. parsedcomment Adds the parsed comment of the event. details Lists additional details about the event. tags Lists tags for the event. Values (separate with |): ids, title, type, user, userid, timestamp, comment, parsedcomment, details, tags Default: ids|title|type|user|timestamp|comment|details</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="letype">
          <xs:annotation>
            <xs:documentation>- Filter log entries to only this type.  One value: Can be empty, or block, protect, rights, delete, upload, move, import, patrol, merge, suppress, managetags, spamblacklist, titleblacklist, gblblock, renameuser, globalauth, gblrights, gblrename, abusefilter, massmessage, translationreview, translatorsandbox, notifytranslators, thanks, usermerge, newusers, pagetranslation</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="leaction">
          <xs:annotation>
            <xs:documentation>- Filter log actions to only this action. Overrides letype. Wildcard actions like action/* allows to specify any string for the asterisk.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lestart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="leend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ledir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: lestart has to be before leend. older List newest first (default). Note: lestart has to be later than leend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="leuser">
          <xs:annotation>
            <xs:documentation>- Filter entries to those made by the given user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="letitle">
          <xs:annotation>
            <xs:documentation>- Filter entries to those related to a page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lenamespace">
          <xs:annotation>
            <xs:documentation>- Filter entries to those in the given namespace.  One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="leprefix">
          <xs:annotation>
            <xs:documentation>- Disabled due to miser mode.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="letag">
          <xs:annotation>
            <xs:documentation>- Only list event entries tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lelimit">
          <xs:annotation>
            <xs:documentation>- How many total event entries to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lecontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListMessageCollectionType" substitutionGroup="mule:abstract-message-processor" name="query-list-message-collection">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=messagecollection which
Query MessageCollection about translations.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListMessageCollectionType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="mcgroup">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="en" name="mclanguage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="500" name="mclimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="mcoffset">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="!optional|!ignored" name="mcfilter">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="definition|translation" name="mcprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListmmsitesType" substitutionGroup="mule:abstract-message-processor" name="query-listmmsites">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=term which Serve
autocomplete requests for the site field in MassMessage..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListmmsitesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="term">
          <xs:annotation>
            <xs:documentation>- Serve autocomplete requests for the site field in MassMessage.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListPagePropNamesType" substitutionGroup="mule:abstract-message-processor" name="query-list-page-prop-names">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=pagepropnames which List
all page property names in use on the wiki.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListPagePropNamesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ppncontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ppnlimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of names to return.  No more than 500 (5,000 for bots) allowed. Default: 10.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListPageswithpropType" substitutionGroup="mule:abstract-message-processor" name="query-list-pageswithprop">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=pageswithprop which List
all pages using a given page property.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListPageswithpropType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="pwppropname">
          <xs:annotation>
            <xs:documentation>- Page prop for which to enumerate pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="pwpprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. value Adds the value of the page prop. Values (separate with |): ids, title, value Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pwpcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="pwplimit">
          <xs:annotation>
            <xs:documentation>-The maximum number of pages to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="pwpdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListPrefixSearchType" substitutionGroup="mule:abstract-message-processor" name="query-list-prefix-search">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=prefixsearch which Perform
a prefix search for page titles.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListPrefixSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="pssearch">
          <xs:annotation>
            <xs:documentation>- Search string.This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="psnamespace">
          <xs:annotation>
            <xs:documentation>- Namespaces to search. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="pslimit">
          <xs:annotation>
            <xs:documentation>- Maximum number of results to return.No more than 100 (200 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="psoffset">
          <xs:annotation>
            <xs:documentation>- Number of results to skip.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListProtectedTitlesType" substitutionGroup="mule:abstract-message-processor" name="query-list-protected-titles">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=protectedtitles which List
all titles protected from creation</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListProtectedTitlesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptnamespace">
          <xs:annotation>
            <xs:documentation>- Only list titles in these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptlevel">
          <xs:annotation>
            <xs:documentation>- Only list titles with these protection levels.Values (separate with |): autoconfirmed, sysop, superprotect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gptlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: ptstart has to be before ptend. older List newest first (default). Note: ptstart has to be later than ptend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptstart">
          <xs:annotation>
            <xs:documentation>- Start listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptend">
          <xs:annotation>
            <xs:documentation>- Stop listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|level" name="ptprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: timestamp - Adds the timestamp of when protection was added. user - Adds the user that added the protection. userid Adds the user ID that added the protection. comment Adds the comment for the protection. parsedcomment Adds the parsed comment for the protection. expiry Adds the timestamp of when the protection will be lifted. level Adds the protection level. Values (separate with |): timestamp, user, userid, comment, parsedcomment, expiry, level Default: timestamp|level</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListQueryPageType" substitutionGroup="mule:abstract-message-processor" name="query-list-query-page">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=querypage which Get a list
provided by a QueryPage-based special page.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListQueryPageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="qppage">
          <xs:annotation>
            <xs:documentation>- The name of the special page. Note, this is case sensitive. This parameter is required.One value: Ancientpages, BrokenRedirects, Deadendpages, DoubleRedirects, ListDuplicatedFiles, Listredirects, Lonelypages, Longpages, MediaStatistics, Mostcategories, Mostimages, Mostinterwikis, Mostlinkedcategories, Mostlinkedtemplates, Mostlinked, Mostrevisions, Fewestrevisions, Shortpages, Uncategorizedcategories, Uncategorizedpages, Uncategorizedimages, Uncategorizedtemplates, Unusedcategories, Unusedimages, Wantedcategories, Wantedfiles, Wantedpages, Wantedtemplates, Unwatchedpages, Unusedtemplates, Withoutinterwiki, DisambiguationPages, DisambiguationPageLinks</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="qpoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="qplimit">
          <xs:annotation>
            <xs:documentation>- Number of results to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListRandomType" substitutionGroup="mule:abstract-message-processor" name="query-list-random">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=random which Get a set of
random pages.

Pages are listed in a fixed sequence, only the starting point is random.
This means that if, for example, Main Page is the first random page in
the list, List of fictional monkeys will always be second, List of people
on stamps of Vanuatu third, etc.

If the number of pages in the namespace is lower than rnlimit, fewer
pages will be returned. The same page will not be returned twice..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListRandomType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rnnamespace">
          <xs:annotation>
            <xs:documentation>- Return pages in these namespaces only.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="rnlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many random pages will be returned. No more than 10 (20 for bots) allowed.Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rnredirect">
          <xs:annotation>
            <xs:documentation>- Load a random redirect instead of a random page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListRecentChangesType" substitutionGroup="mule:abstract-message-processor" name="query-list-recent-changes">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=recentchanges which
Enumerate recent changes</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListRecentChangesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="rcdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rcstart has to be before rcend. older List newest first (default). Note: rcstart has to be later than rcend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcuser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rctag">
          <xs:annotation>
            <xs:documentation>- Only list changes tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title|timestamp|ids" name="rcprop">
          <xs:annotation>
            <xs:documentation>- Include additional pieces of information: user Adds the user responsible for the edit and tags if they are an IP. userid Adds the user ID responsible for the edit. comment Adds the comment for the edit. parsedcomment Adds the parsed comment for the edit. flags Adds flags for the edit. timestamp Adds timestamp of the edit. title Adds the page title of the edit. ids Adds the page ID, recent changes ID and the new and old revision ID. sizes Adds the new and old page length in bytes. redirect Tags edit if page is a redirect. patrolled Tags patrollable edits as being patrolled or unpatrolled. loginfo Adds log information (log ID, log type, etc) to log entries. tags Lists tags for the entry. sha1 Adds the content checksum for entries associated with a revision. Values (separate with |): user, userid, comment, parsedcomment, flags, timestamp, title, ids, sizes, redirect, patrolled, loginfo, tags, sha1 Default: title|timestamp|ids</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rcshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set rcshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, redirect, !redirect, patrolled, !patrolled, unpatrolled</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="rclimit">
          <xs:annotation>
            <xs:documentation>- How many total changes to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="rctype">
          <xs:annotation>
            <xs:documentation>- hich types of changes to show.  Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rctoponly">
          <xs:annotation>
            <xs:documentation>- Only list changes which are the latest revision.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="rccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListSearchType" substitutionGroup="mule:abstract-message-processor" name="query-list-search">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=search which Perform a full
text search.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="srsearch">
          <xs:annotation>
            <xs:documentation>- Search for all page titles (or content) that have this value.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="srnamespace">
          <xs:annotation>
            <xs:documentation>- Search only within these namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="srwhat">
          <xs:annotation>
            <xs:documentation>- Which type of search to perform.  One value: title, text, nearmatch</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="totalhits|suggestion" name="srinfo">
          <xs:annotation>
            <xs:documentation>- Which metadata to return.  Values (separate with |): totalhits, suggestion Default: totalhits|suggestion</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="size|wordcount|timestamp|snippet" name="srprop">
          <xs:annotation>
            <xs:documentation>- Which properties to return:  size Adds the size of the page in bytes. wordcount Adds the word count of the page. timestamp Adds the timestamp of when the page was last edited. snippet Adds a parsed snippet of the page. titlesnippet Adds a parsed snippet of the page title. redirectsnippet Adds a parsed snippet of the redirect title. redirecttitle Adds the title of the matching redirect. sectionsnippet Adds a parsed snippet of the matching section title. sectiontitle Adds the title of the matching section. score Deprecated and ignored. hasrelated Deprecated and ignored. Values (separate with |): size, wordcount, timestamp, score, snippet, titlesnippet, redirecttitle, redirectsnippet, sectiontitle, sectionsnippet, hasrelated Default: size|wordcount|timestamp|snippet</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="sroffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="srlimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return.  No more than 50 (500 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="srinterwiki">
          <xs:annotation>
            <xs:documentation>- Include interwiki results in the search, if available.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListTagsType" substitutionGroup="mule:abstract-message-processor" name="query-list-tags">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=tags which List change
tags.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListTagsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="tgcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="tglimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of tags to list.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="tgprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get:  name Adds name of tag. displayname Adds system message for the tag. description Adds description of the tag. hitcount Adds the number of revisions and log entries that have this tag. defined Indicate whether the tag is defined. source Gets the sources of the tag, which may include extension for extension-defined tags and manual for tags that may be applied manually by users. active Whether the tag is still being applied. Values (separate with |): name, displayname, description, hitcount, defined, source, active Default: name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListUserContribsType" substitutionGroup="mule:abstract-message-processor" name="query-list-user-contribs">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=usercontribs which Get all
edits by a user</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListUserContribsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="uclimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of contributions to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucstart">
          <xs:annotation>
            <xs:documentation>- The start timestamp to return from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucend">
          <xs:annotation>
            <xs:documentation>- The end timestamp to return to.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="uccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucuser">
          <xs:annotation>
            <xs:documentation>- The users to retrieve contributions for.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucuserprefix">
          <xs:annotation>
            <xs:documentation>- Retrieve contributions for all users whose names begin with this value. Overrides ucuser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="ucdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: ucstart has to be before ucend. older List newest first (default). Note: ucstart has to be later than ucend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucnamespace">
          <xs:annotation>
            <xs:documentation>- Only list contributions in these namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title|timestamp|comment|size|flags" name="ucprop">
          <xs:annotation>
            <xs:documentation>- Include additional pieces of information:  ids Adds the page ID and revision ID. title Adds the title and namespace ID of the page. timestamp Adds the timestamp of the edit. comment Adds the comment of the edit. parsedcomment Adds the parsed comment of the edit. size Adds the new size of the edit. sizediff Adds the size delta of the edit against its parent. flags Adds flags of the edit. patrolled Tags patrolled edits. tags Lists tags for the edit. Values (separate with |): ids, title, timestamp, comment, parsedcomment, size, sizediff, flags, patrolled, tags Default: ids|title|timestamp|comment|size|flags</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ucshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria, e.g. non minor edits only: ucshow=!minor.  If ucshow=patrolled or ucshow=!patrolled is set, revisions older than $wgRCMaxAge (2592000 seconds) won't be shown.  Values (separate with |): minor, !minor, patrolled, !patrolled, top, !top, new, !new</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="uctag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListUsersType" substitutionGroup="mule:abstract-message-processor" name="query-list-users">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=users which Get information
about a list of users</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListUsersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="usprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include:  blockinfo Tags if the user is blocked, by whom, and for what reason. groups Lists all the groups each user belongs to. implicitgroups Lists all the groups a user is automatically a member of. rights Lists all the rights each user has. editcount Adds the user's edit count. registration Adds the user's registration timestamp. emailable Tags if the user can and wants to receive email through Special:Emailuser. gender Tags the gender of the user. Returns "male", "female", or "unknown". Values (separate with |): blockinfo, groups, implicitgroups, rights, editcount, registration, emailable, gender</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ususers">
          <xs:annotation>
            <xs:documentation>- A list of users to obtain information for.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListWatchListType" substitutionGroup="mule:abstract-message-processor" name="query-list-watch-list">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=watchlist which Get recent
changes to pages in the current user's watchlist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListWatchListType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlallrev">
          <xs:annotation>
            <xs:documentation>- Include multiple revisions of the same page within given timeframe.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 wluser Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wluser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="wldir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wlstart has to be before wlend. older List newest first (default). Note: wlstart has to be later than wlend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="wllimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title|flags" name="wlprop">
          <xs:annotation>
            <xs:documentation>- Which additional items to get:  ids Adds revision IDs and page IDs. title Adds title of the page. flags Adds flags for the edit. user Adds the user who made the edit. userid Adds user ID of whom made the edit. comment Adds comment of the edit. parsedcomment Adds parsed comment of the edit. timestamp Adds timestamp of the edit. patrol Tags edits that are patrolled. sizes Adds the old and new lengths of the page. notificationtimestamp Adds timestamp of when the user was last notified about the edit. loginfo Adds log information where appropriate. Values (separate with |): ids, title, flags, user, userid, comment, parsedcomment, timestamp, patrol, sizes, notificationtimestamp, loginfo Default: ids|title|flags</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set wlshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, patrolled, !patrolled, unread, !unread</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="wltype">
          <xs:annotation>
            <xs:documentation>- Which types of changes to show:  edit Regular page edits. external External changes. new Page creations. log Log entries. Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlowner">
          <xs:annotation>
            <xs:documentation>- Used along with wltoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wltoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListWatchListRawType" substitutionGroup="mule:abstract-message-processor" name="query-list-watch-list-raw">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=watchlistraw which Get all
pages on the current user's watchlist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListWatchListRawType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wrcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wrnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="wrlimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wrprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get:  changed Adds timestamp of when the user was last notified about the edit. Values (separate with |): changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wrshow">
          <xs:annotation>
            <xs:documentation>- Only list items that meet these criteria.  Values (separate with |): changed, !changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wrowner">
          <xs:annotation>
            <xs:documentation>- Used along with wrtoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="wrtoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="wrdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wrstart has to be before wrend. older List newest first (default). Note: wrstart has to be later than wrend. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryListWikiSetsType" substitutionGroup="mule:abstract-message-processor" name="query-list-wiki-sets">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with list=wikisets which Enumerate
all wiki sets.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryListWikiSetsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="meta">
          <xs:annotation>
            <xs:documentation>- Which metadata to get. Values (separate with |): allmessages, filerepoinfo, globaluserinfo, languagestats, messagegroups, messagegroupstats, messagetranslations, notifications, siteinfo, tokens, userinfo, wikibase</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wsfrom">
          <xs:annotation>
            <xs:documentation>- The name of the wiki set to start from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wsprop">
          <xs:annotation>
            <xs:documentation>- What pieces of information to include.  type Opt-in based (includes only specified wikis) or opt-out based (includes all wikis except specified). wikisincluded The wikis that are included in this wiki set. wikisnotincluded The wikis that are not included in this wiki set. Values (separate with |): type, wikisincluded, wikisnotincluded</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="wslimit">
          <xs:annotation>
            <xs:documentation>- How many wiki sets to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="wsorderbyname">
          <xs:annotation>
            <xs:documentation>- Order results by name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaAllMessagesType" substitutionGroup="mule:abstract-message-processor" name="query-meta-all-messages">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=allmessages which Return
messages from this site.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaAllMessagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="*" name="ammessages">
          <xs:annotation>
            <xs:documentation>- Which messages to output. * (default) means all messages.  Separate values with |. Maximum number of values is 50 (500 for bots). Default: *</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get.  Values (separate with |): default</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amenableparser">
          <xs:annotation>
            <xs:documentation>- Set to enable parser, will preprocess the wikitext of message (substitute magic words, handle templates, etc.).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amnocontent">
          <xs:annotation>
            <xs:documentation>- If set, do not include the content of the messages in the output.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amincludelocal">
          <xs:annotation>
            <xs:documentation>- Also include local messages, i.e. messages that don't exist in the software but do exist as a MediaWiki: page. This lists all MediaWiki: pages, so it will also list those that aren't really messages such as Common.js.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amargs">
          <xs:annotation>
            <xs:documentation>- Arguments to be substituted into message.  Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amfilter">
          <xs:annotation>
            <xs:documentation>- Return only messages with names that contain this string.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="amcustomised">
          <xs:annotation>
            <xs:documentation>- Return only messages in this customisation state.  One value: all, modified, unmodified Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amlang">
          <xs:annotation>
            <xs:documentation>- Return messages in this language.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amfrom">
          <xs:annotation>
            <xs:documentation>- Return messages starting at this message.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amto">
          <xs:annotation>
            <xs:documentation>- Return messages ending at this message.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amtitle">
          <xs:annotation>
            <xs:documentation>- Page name to use as context when parsing message (for amenableparser option).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="amprefix">
          <xs:annotation>
            <xs:documentation>- Return messages with this prefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaFileRepoInfoType" substitutionGroup="mule:abstract-message-processor" name="query-meta-file-repo-info">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=filerepoinfo which Return
meta information about image repositories configured on the wiki.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaFileRepoInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name|displayname|rootUrl|local|url|thumbUrl|initialCapital|descBaseUrl|scriptDirUrl|fetchDescription|favicon" name="friprop">
          <xs:annotation>
            <xs:documentation>- Which repository properties to get (there may be more available on some wikis):  apiurl URL to the repository API - helpful for getting image info from the host. name The key of the repository - used in e.g. $wgForeignFileRepos and imageinfo return values. displayname The human-readable name of the repository wiki. rooturl Root URL for image paths. local Whether that repository is the local one or not. Values (separate with |): name, displayname, rootUrl, local, url, thumbUrl, initialCapital, descBaseUrl, scriptDirUrl, fetchDescription, favicon Default: name|displayname|rootUrl|local|url|thumbUrl|initialCapital |descBaseUrl|scriptDirUrl|fetchDescription|favicon.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaGlobalUserInfoType" substitutionGroup="mule:abstract-message-processor" name="query-meta-global-user-info">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=globaluserinfo which Show
information about a global user.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaGlobalUserInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="guiuser">
          <xs:annotation>
            <xs:documentation>- User to get information about. Defaults to the current user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="guiprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get:  groups Get a list of global groups this user belongs to. rights Get a list of global rights this user has. merged Get a list of merged accounts. unattached Get a list of unattached accounts. editcount Get users global editcount. Values (separate with |): groups, rights, merged, unattached, editcount</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaLanguageStatsType" substitutionGroup="mule:abstract-message-processor" name="query-meta-language-stats">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=languagestats which Query
language stats</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaLanguageStatsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="lsoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="8" name="lstimelimit">
          <xs:annotation>
            <xs:documentation>- Maximum time to spend calculating missing statistics. If zero, only the cached results from the beginning are returned.  The value must be between 0 and 10. Default: 8 @param lstimelimit - Language code.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="lslanguage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaMessageGroupsType" substitutionGroup="mule:abstract-message-processor" name="query-meta-message-groups">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=messagegroups Return
information about message groups.

Note that the uselang parameter affects the output of language dependent
parts.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaMessageGroupsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="100" name="mgdepth">
          <xs:annotation>
            <xs:documentation>- When using the tree format, limit the depth to this many levels. Value 0 means that no subgroups are shown. If the limit is reached, a prop groupcount is added and it states the number of direct children.  Default: 100</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="" name="mgfilter">
          <xs:annotation>
            <xs:documentation>- Only return messages with IDs that match one or more of the inputs given (case-insensitive, separated by pipes, * wildcard).  Separate values with |. Maximum number of values is 50 (500 for bots). Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="flat" name="mgformat">
          <xs:annotation>
            <xs:documentation>- In a tree format message groups can exist multiple places in the tree.  One value: flat, tree Default: flat</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="6" name="mgiconsize">
          <xs:annotation>
            <xs:documentation>- Preferred size of rasterised group icon.  Default: 64</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="id|label|description|class|exists" name="mgprop">
          <xs:annotation>
            <xs:documentation>- What translation-related information to get:  id Include ID of the group. label Include label of the group. description Include description of the group. class Include class name of the group. namespace Include namespace of the group. Not all groups belong to a single namespace. exists Include self-calculated existence property of the group. icon Include URLs to icon of the group. priority Include priority status like discouraged. prioritylangs Include preferred languages. If not set, this returns false. priorityforce Include priority status - is the priority languages setting forced. workflowstates Include the workflow states for the message group. Values (separate with |): id, label, description, class, namespace, exists, icon, priority, prioritylangs, priorityforce, workflowstates Default: id|label|description|class|exists</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="" name="mgroot">
          <xs:annotation>
            <xs:documentation>- When using the tree format, instead of starting from top level start from the given message group, which must be an aggregate message group. When using flat format only the specified group is returned.  Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaMessageGroupStatsType" substitutionGroup="mule:abstract-message-processor" name="query-meta-message-group-stats">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=messagegroupstats which
Query message group stats.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaMessageGroupStatsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="mgsoffset">
          <xs:annotation>
            <xs:documentation>-When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="8" name="mgstimelimit">
          <xs:annotation>
            <xs:documentation>- Maximum time to spend calculating missing statistics. If zero, only the cached results from the beginning are returned.  The value must be between 0 and 10. Default: 8</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="mgsgroup">
          <xs:annotation>
            <xs:documentation>- Message group ID.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaNotificationsType" substitutionGroup="mule:abstract-message-processor" name="query-meta-notifications">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=notifications which Get
notifications waiting for the current user.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaNotificationsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="list" name="notprop">
          <xs:annotation>
            <xs:documentation>- Details to request.  Values (separate with |): list, count, index Default: list</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="alert|message" name="notsections">
          <xs:annotation>
            <xs:documentation>- The notification sections to query.  Values (separate with |): alert, message Default: alert|message</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notgroupbysection">
          <xs:annotation>
            <xs:documentation>- Whether to group the result by section. Each section is fetched separately if set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notformat">
          <xs:annotation>
            <xs:documentation>- If specified, notifications will be returned formatted this way.  One value: text, flyout, html</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="20" name="notlimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of notifications to return.  No more than 50 (500 for bots) allowed. Default: 20</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notindex">
          <xs:annotation>
            <xs:documentation>- If specified, a list of notification IDs, in order, will be returned.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notalertcontinue">
          <xs:annotation>
            <xs:documentation>- When more alert results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notalertunreadfirst">
          <xs:annotation>
            <xs:documentation>- Whether to show unread message notifications first.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notmessagecontinue">
          <xs:annotation>
            <xs:documentation>- When more message results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="notmessageunreadfirst">
          <xs:annotation>
            <xs:documentation>- Whether to show unread alert notifications first.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaMessageranslationsType" substitutionGroup="mule:abstract-message-processor" name="query-meta-messageranslations">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=messagetranslations which
Query all translations for a single message.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaMessageranslationsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="mttitle">
          <xs:annotation>
            <xs:documentation>- Full title of a known message.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="mtoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetasSiteInfoType" substitutionGroup="mule:abstract-message-processor" name="query-metas-site-info">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=siteinfo which Return
general information about the site.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetasSiteInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="general" name="siprop">
          <xs:annotation>
            <xs:documentation>- Which information to get:   Values (separate with |): general, namespaces, namespacealiases, specialpagealiases, magicwords, interwikimap, dbrepllag, statistics, usergroups, libraries, extensions, fileextensions, rightsinfo, restrictions, languages, skins, extensiontags, functionhooks, showhooks, variables, protocols, defaultoptions Default: general</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="sifilteriw">
          <xs:annotation>
            <xs:documentation>- Return only local or only nonlocal entries of the interwiki map.  One value: local, !local</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="sishowalldb">
          <xs:annotation>
            <xs:documentation>- List all database servers, not just the one lagging the most.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="sinumberingroup">
          <xs:annotation>
            <xs:documentation>- Lists the number of users in user groups.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="siinlanguagecode">
          <xs:annotation>
            <xs:documentation>- Language code for localised language names (best effort) and skin names.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetatokensType" substitutionGroup="mule:abstract-message-processor" name="query-metatokens">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=tokens which Gets tokens
for data-modifying actions.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetatokensType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="csrf" name="type">
          <xs:annotation>
            <xs:documentation>- Types of token to request.  Values (separate with |): csrf, deleteglobalaccount, patrol, rollback, setglobalaccountstatus, userrights, watch Default: csrf</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaUserInfoType" substitutionGroup="mule:abstract-message-processor" name="query-meta-user-info">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=userinfo which Get
information about the current user.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaUserInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="uiprop">
          <xs:annotation>
            <xs:documentation>- Values (separate with |): blockinfo, hasmsg, groups, implicitgroups, rights, changeablegroups, options, preferencestoken, editcount, ratelimits, email, realname, acceptlang, registrationdate, unreadcount</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryMetaWikiBaseType" substitutionGroup="mule:abstract-message-processor" name="query-meta-wiki-base">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with meta=wikibase which Get
information about the associated Wikibase repository.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryMetaWikiBaseType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="uiprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation>- Get the list of pages to work on by executing the specified query module. Note: Generator parameter names must be prefixed with a "g", see examples. One value: allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, backlinks, categories, categorymembers, deletedrevisions, duplicatefiles, embeddedin, exturlusage, fileusage, images, imageusage, iwbacklinks, langbacklinks, links, linkshere, messagecollection, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, redirects, revisions, search, templates, transcludedin, watchlist, watchlistraw</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllcategoriesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-allcategories">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=allcategories which
Enumerate all categories.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllcategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacfrom">
          <xs:annotation>
            <xs:documentation>- The category to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacto">
          <xs:annotation>
            <xs:documentation>- The category to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacprefix">
          <xs:annotation>
            <xs:documentation>- Search for all category titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gacdir">
          <xs:annotation>
            <xs:documentation>- Direction to sort in. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacmin">
          <xs:annotation>
            <xs:documentation>- Only return categories with at least this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacmax">
          <xs:annotation>
            <xs:documentation>- Only return categories with at most this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaclimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: size Adds number of pages in the category. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): size, hidden Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=alldeletedrevisions
List all deleted revisions by a user or in a namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="gadrprop">
          <xs:annotation>
            <xs:documentation>Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned. No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires adrprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires adrprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires adrprop=content). For performance reasons, if this option is used, adrlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides adrdiffto. If adrsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for adrdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadruser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in this namespace. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 100, 101, 108, 109, 118, 119, 710, 711, 446, 447, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.May only be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at.May only be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gadrdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: adrstart has to be before adrend. older List newest first (default). Note: adrstart has to be later than adrend. One value: newer, older. Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrfrom">
          <xs:annotation>
            <xs:documentation>- Start listing at this title.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrto">
          <xs:annotation>
            <xs:documentation>- Stop listing at this title.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrprefix">
          <xs:annotation>
            <xs:documentation>- Search for all page titles that begin with this value.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.Cannot be used with adruser. -</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrgeneratetitles">
          <xs:annotation>
            <xs:documentation>- When being used as a generator, generate titles rather than revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllFileUsagesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-file-usages">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=allfileusages which
List all file usages, including non-existing.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllFileUsagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaffrom">
          <xs:annotation>
            <xs:documentation>- The title of the file to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafto">
          <xs:annotation>
            <xs:documentation>- The title of the file to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafprefix">
          <xs:annotation>
            <xs:documentation>- Search for all file titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct file titles. Cannot be used with afprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="gafprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the using page (cannot be used with afunique). title Adds the title of the file. Values (separate with |): ids, title. Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaflimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gafdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllImagesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-images">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=allimages which
Enumerate all images sequentially.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="gaisort">
          <xs:annotation>
            <xs:documentation>- Property to sort by.One value: name, timestamp Default: name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gaidir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending, newer, older Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaifrom">
          <xs:annotation>
            <xs:documentation>- The image title to start enumerating from. Can only be used with gaisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaito">
          <xs:annotation>
            <xs:documentation>- The image title to stop enumerating at. Can only be used with aisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaistart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from. Can only be used with aisort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating. Can only be used with aisort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|url" name="gaiprop">
          <xs:annotation>
            <xs:documentation>- Which file information to get. Values (separate with |): timestamp, user, userid, comment, parsedcomment, canonicaltitle, url, size, dimensions, sha1, mime, mediatype, metadata, commonmetadata, extmetadata, bitdepth. Default: timestamp|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiprefix">
          <xs:annotation>
            <xs:documentation>- Search for all image titles that begin with this value. Can only be used with aisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiminsize">
          <xs:annotation>
            <xs:documentation>- Limit to images with at least this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaimaxsize">
          <xs:annotation>
            <xs:documentation>- Limit to images with at most this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaisha1">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image. Overrides aisha1base36.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaisha1base36">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image in base 36 (used in MediaWiki).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiuser">
          <xs:annotation>
            <xs:documentation>- Only return files uploaded by this user. Can only be used with aisort=timestamp. Cannot be used together with aifilterbots.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gaifilterbots">
          <xs:annotation>
            <xs:documentation>- How to filter files uploaded by bots. Can only be used with aisort=timestamp. Cannot be used together with aiuser. One value: all, bots, nobots Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaimime">
          <xs:annotation>
            <xs:documentation>- Disabled due to miser mode. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gailimit">
          <xs:annotation>
            <xs:documentation>- How many images in total to return.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllRedirectsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-redirects">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=allredirects which
List all redirects to a namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="gaisort">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gaidir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garfrom">
          <xs:annotation>
            <xs:documentation>- The title of the redirect to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garto">
          <xs:annotation>
            <xs:documentation>- The title of the redirect to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garprefix">
          <xs:annotation>
            <xs:documentation>- Search for all target pages that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct target pages. Cannot be used with arprop=ids|fragment|interwiki. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="garprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the redirecting page (cannot be used with arunique). title Adds the title of the redirect. fragment Adds the fragment from the redirect, if any (cannot be used with arunique). interwiki Adds the interwiki prefix from the redirect, if any (cannot be used with arunique). Values (separate with |): ids, title, fragment, interwiki.Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="garnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="garlimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllTransclusionsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-transclusions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=alltransclusions which
List all transclusions (pages embedded using {{x), including
non-existing.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllTransclusionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatfrom">
          <xs:annotation>
            <xs:documentation>- The title of the transclusion to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatto">
          <xs:annotation>
            <xs:documentation>- The title of the transclusion to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatprefix">
          <xs:annotation>
            <xs:documentation>- Search for all transclused titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct transcluded titles. Cannot be used with gatprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="gatprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the transcluding page (cannot be used with arunique). title Adds the title of the transclusion. Values (separate with |): ids, title.Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gatnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gatlimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gatdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending. Default: ascending.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllPagesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-pages">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=allpages which
Enumerate all pages sequentially in a given namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllPagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapfrom">
          <xs:annotation>
            <xs:documentation>- The page title to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapto">
          <xs:annotation>
            <xs:documentation>- The page title to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprefix">
          <xs:annotation>
            <xs:documentation>- Search for all page titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gapnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapfilterredir">
          <xs:annotation>
            <xs:documentation>- Which pages to list. One value: all, redirects, nonredirects. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapminsize">
          <xs:annotation>
            <xs:documentation>- Limit to pages with at least this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapmaxsize">
          <xs:annotation>
            <xs:documentation>- Limit to pages with at most this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprtype">
          <xs:annotation>
            <xs:documentation>- Limit to protected pages only.Values (separate with |): edit, move, upload</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprlevel">
          <xs:annotation>
            <xs:documentation>- Filter protections based on protection level (must be used with apprtype= parameter). Values (separate with |): Can be empty, or autoconfirmed, sysop, superprotect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapprfiltercascade">
          <xs:annotation>
            <xs:documentation>- Filter protections based on cascadingness (ignored when apprtype isn't set). One value: cascading, noncascading, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaplimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gapdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapfilterlanglinks">
          <xs:annotation>
            <xs:documentation>- Filter based on whether a page has langlinks. Note that this may not consider langlinks added by extensions. One value: withlanglinks, withoutlanglinks, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapprexpiry">
          <xs:annotation>
            <xs:documentation>- Which protection expiry to filter the page on: indefinite Get only pages with indefinite protection expiry. definite Get only pages with a definite (specific) protection expiry. all Get pages with any protections expiry. One value: indefinite, definite, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenAllLinksType" substitutionGroup="mule:abstract-message-processor" name="query-gen-all-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=alllinks which
Enumerate all links that point to a given namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenAllLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galfrom">
          <xs:annotation>
            <xs:documentation>- The title of the link to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galto">
          <xs:annotation>
            <xs:documentation>- The title of the link to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galprefix">
          <xs:annotation>
            <xs:documentation>- Search for all linked titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct linked titles. Cannot be used with alprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="galprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the linking page (cannot be used with alunique). title Adds the title of the link. Values (separate with |): ids, title. Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="galnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gallimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="galdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending. Default: ascending.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenBackLinksType" substitutionGroup="mule:abstract-message-processor" name="query-gen-back-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=backlinks which Find
all pages that link to the given page.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gbltitle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with gblpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblpageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with bltitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gblfilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when blredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If blredirect is enabled, limit applies to each level separately (which means up to 2 * bllimit results may be returned). No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenCategoriesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-categories">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=categories which List
all categories the pages belong to.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get for each category: sortkey Adds the sortkey (hexadecimal string) and sortkey prefix (human-readable part) for the category. timestamp Adds timestamp of when the category was added. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): sortkey, timestamp, hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclshow">
          <xs:annotation>
            <xs:documentation>- Which kind of categories to show. Values (separate with |): hidden, !hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gcllimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclcategories">
          <xs:annotation>
            <xs:documentation>- Only list these categories. Useful for checking whether a certain page is in a certain category. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gcldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenCategoryMembersType" substitutionGroup="mule:abstract-message-processor" name="query-gen-category-members">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=categorymembers which
List all pages in a given category.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenCategoryMembersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmtitle">
          <xs:annotation>
            <xs:documentation>- Which category to enumerate (required). Must include the Category: prefix. Cannot be used together with gcmpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmpageid">
          <xs:annotation>
            <xs:documentation>- Page ID of the category to enumerate. Cannot be used together with cmtitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="gcmprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. sortkey Adds the sortkey used for sorting in the category (hexadecimal string). sortkeyprefix Adds the sortkey prefix used for sorting in the category (human-readable part of the sortkey). type Adds the type that the page has been categorised as (page, subcat or file). timestamp Adds the timestamp of when the page was included. Values (separate with |): ids, title, sortkey, sortkeyprefix, type, timestamp Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Note that cmtype=subcat or cmtype=file may be used instead of cmnamespace=14 or 6. Note: Due to miser mode, using this may result in fewer than cmlimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmtype">
          <xs:annotation>
            <xs:documentation>- Which type of category members to include. Ignored when cmsort=timestamp is set. Values (separate with |): page, subcat, file Default: page|subcat|file</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmlimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of pages to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmsort">
          <xs:annotation>
            <xs:documentation>- Property to sort by. One value: sortkey, timestamp.Default: sortkey</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmdir">
          <xs:annotation>
            <xs:documentation>- In which direction to sort. One value: asc, desc, ascending, descending, newer, older Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstart">
          <xs:annotation>
            <xs:documentation>- Timestamp to start listing from. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmend">
          <xs:annotation>
            <xs:documentation>- Timestamp to end listing at. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstarthexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to start listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmendhexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to end listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstartsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to start listing from. Can only be used with cmsort=sortkey. Overrides gcmstarthexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmendsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to end listing BEFORE (not at, if this value occurs it will not be included!). Can only be used with gcmsort=sortkey. Overrides gcmendhexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=deletedrevisions which
Get deleted revision information.

May be used in several ways:

Get deleted revisions for a set of pages, by setting titles or pageids.
Ordered by title and timestamp. Get data about a set of deleted revisions
by setting their IDs with revids. Ordered by revision ID.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned.No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires drvprop=content). For performance reasons, if this option is used, drvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides drvdiffto. If drvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for drvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvuser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenDuplicateFilesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-duplicate-files">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=duplicatefiles which
List all files that are duplicates of the given files based on hash
values.

May be used in several ways:

Get deleted revisions for a set of pages, by setting titles or pageids.
Ordered by title and timestamp. Get data about a set of deleted revisions
by setting their IDs with revids. Ordered by revision ID.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenDuplicateFilesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdflimit">
          <xs:annotation>
            <xs:documentation>- How many duplicate files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdfcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdfdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdflocalonly">
          <xs:annotation>
            <xs:documentation>- Look only for files in the local repository.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenEmbeddedInType" substitutionGroup="mule:abstract-message-processor" name="query-gen-embedded-in">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=embeddedin which Find
all pages that embed (transclude) the given title.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenEmbeddedInType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geititle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with geipageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geipageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with geititle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geinamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geidir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geifilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. One value: all, redirects, nonredirects Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geilimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenExtUrlUsageType" substitutionGroup="mule:abstract-message-processor" name="query-gen-ext-url-usage">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=exturlusage which
Enumerate pages that contain a given URL.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenExtUrlUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the ID of page. title Adds the title and namespace ID of the page. url Adds the URL used in the page. Values (separate with |): ids, title, url Default: ids|title|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprotocol">
          <xs:annotation>
            <xs:documentation>- Protocol of the URL. If empty and euquery set, the protocol is http. Leave both this and euquery empty to list all external links. One value: Can be empty, or bitcoin, ftp, ftps, geo, git, gopher, http, https, irc, ircs, magnet, mailto, mms, news, nntp, redis, sftp, sip, sips, sms, ssh, svn, tel, telnet, urn, worldwind, xmpp Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuquery">
          <xs:annotation>
            <xs:documentation>- Search string without protocol. See Special:LinkSearch. Leave empty to list all external links.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geunamespace">
          <xs:annotation>
            <xs:documentation>- The page namespaces to enumerate. Note: Due to miser mode, using this may result in fewer than eulimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geulimit">
          <xs:annotation>
            <xs:documentation>- How many pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuexpandurl">
          <xs:annotation>
            <xs:documentation>- Expand protocol-relative URLs with the canonical protocol.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenFileUsageType" substitutionGroup="mule:abstract-message-processor" name="query-gen-file-usage">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=fileusage which Find
all pages that use the given files.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenFileUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuoffset">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprotocol">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuquery">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geunamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geulimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuexpandurl">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenImagesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-images">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=images which Returns
all files contained on the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimlimit">
          <xs:annotation>
            <xs:documentation>- How many files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimimages">
          <xs:annotation>
            <xs:documentation>- Only list these files. Useful for checking whether a certain page has a certain file. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenImageUsageType" substitutionGroup="mule:abstract-message-processor" name="query-gen-image-usage">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=imageusage which Find
all pages that use the given image title.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenImageUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giutitle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with iupageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giupageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with iutitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giucontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giunamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giudir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giufilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when iuredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects.Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giulimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If iuredirect is enabled, the limit applies to each level separately (which means up to 2 * iulimit results may be returned). No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giuredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenIwBackLinksType" substitutionGroup="mule:abstract-message-processor" name="query-gen-iw-back-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=imageusage which Find
all pages that use the given image title.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenIwBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblprefix">
          <xs:annotation>
            <xs:documentation>- Prefix for the interwiki.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbltitle">
          <xs:annotation>
            <xs:documentation>- Interwiki link to search for. Must be used with giwblblprefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: iwprefix Adds the prefix of the interwiki. iwtitle Adds the title of the interwiki. Values (separate with |): iwprefix, iwtitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenLangBackLinksType" substitutionGroup="mule:abstract-message-processor" name="query-gen-lang-back-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=langbacklinks which
Find all pages that link to the given language link.

Can be used to find all links with a language code, or all links to a
title (with a given language). Using neither parameter is effectively
"all language links".

Note that this may not consider language links added by extensions.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenLangBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbllang">
          <xs:annotation>
            <xs:documentation>- Language for the language link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbltitle">
          <xs:annotation>
            <xs:documentation>- Language link to search for. Must be used with lbllang.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: lllang Adds the language code of the language link. lltitle Adds the title of the language link. Values (separate with |): lllang, lltitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenLinksType" substitutionGroup="mule:abstract-message-processor" name="query-gen-links">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=langbacklinks which
Find all pages that link to the given language link.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gplnamespace">
          <xs:annotation>
            <xs:documentation>- Show links in these namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpllimit">
          <xs:annotation>
            <xs:documentation>- How many links to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gplcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpltitles">
          <xs:annotation>
            <xs:documentation>- Only list links to these titles. Useful for checking whether a certain page links to a certain title. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenLinkShereType" substitutionGroup="mule:abstract-message-processor" name="query-gen-link-shere">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=linkshere which Find
all pages that link to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenLinkShereType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhshow">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenMessageCollectionType" substitutionGroup="mule:abstract-message-processor" name="query-gen-message-collection">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=messagecollection
which Query MessageCollection about translations.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenMessageCollectionType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gmcgroup">
          <xs:annotation>
            <xs:documentation>- Message group.This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="en" name="gmclanguage">
          <xs:annotation>
            <xs:documentation>- Language code. Default: en</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="500" name="gmclimit">
          <xs:annotation>
            <xs:documentation>- How many messages to show (after filtering). No more than 5,000 (5,000 for bots) allowed. Default: 500</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gmcoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue. Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="!optional|!ignored" name="gmcfilter">
          <xs:annotation>
            <xs:documentation>- Message collection filters. Use ! to negate condition. For example !fuzzy means list only all non-fuzzy messages. Filters are applied in the order given. fuzzy Messages with fuzzy tag. optional Messages which should be translated only if changes are necessary. ignored Messages which are never translated. hastranslation Messages which have a translation regardless if it is fuzzy or not. translated Messages which have a translation which is not fuzzy. changed Messages which has been translated or changed since last export. reviewer:# Messages where given user ID # is among reviewers. last-translator:# Messages where given user ID # is the last translator. Separate values with |. Maximum number of values is 50 (500 for bots). Default: !optional|!ignored</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="definition|translation" name="gmcprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: definition Message definition. translation Current translation (without !!FUZZY!! string if any, use the tags to check for outdated or broken translations). tags Message tags, like optional, ignored and fuzzy. properties Message properties, like status, revision, last-translator. Can vary between messages. revision Deprecated! Use mcprop=properties. Values (separate with |): definition, translation, tags, revision, properties Default:definition|translation</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenPagesWithPropType" substitutionGroup="mule:abstract-message-processor" name="query-gen-pages-with-prop">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=pageswithprop List all
pages using a given page property.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenPagesWithPropType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gpwppropname">
          <xs:annotation>
            <xs:documentation>- Page prop for which to enumerate pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="gpwpprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. value Adds the value of the page prop. Values (separate with |): ids, title, value Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpwpcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gpwplimit">
          <xs:annotation>
            <xs:documentation>-The maximum number of pages to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gpwpdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenPrefixSearchType" substitutionGroup="mule:abstract-message-processor" name="query-gen-prefix-search">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=prefixsearch which
Perform a prefix search for page titles.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenPrefixSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gpssearch">
          <xs:annotation>
            <xs:documentation>- Search string.This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gpsnamespace">
          <xs:annotation>
            <xs:documentation>- Namespaces to search. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gpslimit">
          <xs:annotation>
            <xs:documentation>- Maximum number of results to return.No more than 100 (200 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gpsoffset">
          <xs:annotation>
            <xs:documentation>- Number of results to skip.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenProtectedTitlesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-protected-titles">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=protectedtitles which
List all titles protected from creation.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenProtectedTitlesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptnamespace">
          <xs:annotation>
            <xs:documentation>- Only list titles in these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptlevel">
          <xs:annotation>
            <xs:documentation>- Only list titles with these protection levels.Values (separate with |): autoconfirmed, sysop, superprotect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gptlimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: ptstart has to be before ptend. older List newest first (default). Note: ptstart has to be later than ptend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptstart">
          <xs:annotation>
            <xs:documentation>- Start listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptend">
          <xs:annotation>
            <xs:documentation>- Stop listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|level" name="gptprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: timestamp - Adds the timestamp of when protection was added. user - Adds the user that added the protection. userid Adds the user ID that added the protection. comment Adds the comment for the protection. parsedcomment Adds the parsed comment for the protection. expiry Adds the timestamp of when the protection will be lifted. level Adds the protection level. Values (separate with |): timestamp, user, userid, comment, parsedcomment, expiry, level Default: timestamp|level</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenQueryPageType" substitutionGroup="mule:abstract-message-processor" name="query-gen-query-page">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=querypage which Get a
list provided by a QueryPage-based special page..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenQueryPageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gqppage">
          <xs:annotation>
            <xs:documentation>- The name of the special page. Note, this is case sensitive. This parameter is required.One value: Ancientpages, BrokenRedirects, Deadendpages, DoubleRedirects, ListDuplicatedFiles, Listredirects, Lonelypages, Longpages, MediaStatistics, Mostcategories, Mostimages, Mostinterwikis, Mostlinkedcategories, Mostlinkedtemplates, Mostlinked, Mostrevisions, Fewestrevisions, Shortpages, Uncategorizedcategories, Uncategorizedpages, Uncategorizedimages, Uncategorizedtemplates, Unusedcategories, Unusedimages, Wantedcategories, Wantedfiles, Wantedpages, Wantedtemplates, Unwatchedpages, Unusedtemplates, Withoutinterwiki, DisambiguationPages, DisambiguationPageLinks</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gqpoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gqplimit">
          <xs:annotation>
            <xs:documentation>- Number of results to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenRandomType" substitutionGroup="mule:abstract-message-processor" name="query-gen-random">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=random which Get a set
of random pages.

Pages are listed in a fixed sequence, only the starting point is random.
This means that if, for example, Main Page is the first random page in
the list, List of fictional monkeys will always be second, List of people
on stamps of Vanuatu third, etc.

If the number of pages in the namespace is lower than rnlimit, fewer
pages will be returned. The same page will not be returned twice.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenRandomType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grnnamespace">
          <xs:annotation>
            <xs:documentation>- Return pages in these namespaces only.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="grnlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many random pages will be returned. No more than 10 (20 for bots) allowed.Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grnredirect">
          <xs:annotation>
            <xs:documentation>- Load a random redirect instead of a random page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenRecentChangesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-recent-changes">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=recentchanges which
Enumerate recent changes.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenRecentChangesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="grcdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rcstart has to be before rcend. older List newest first (default). Note: rcstart has to be later than rcend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcuser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grctag">
          <xs:annotation>
            <xs:documentation>- Only list changes tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title|timestamp|ids" name="grcprop">
          <xs:annotation>
            <xs:documentation>- Include additional pieces of information: user Adds the user responsible for the edit and tags if they are an IP. userid Adds the user ID responsible for the edit. comment Adds the comment for the edit. parsedcomment Adds the parsed comment for the edit. flags Adds flags for the edit. timestamp Adds timestamp of the edit. title Adds the page title of the edit. ids Adds the page ID, recent changes ID and the new and old revision ID. sizes Adds the new and old page length in bytes. redirect Tags edit if page is a redirect. patrolled Tags patrollable edits as being patrolled or unpatrolled. loginfo Adds log information (log ID, log type, etc) to log entries. tags Lists tags for the entry. sha1 Adds the content checksum for entries associated with a revision. Values (separate with |): user, userid, comment, parsedcomment, flags, timestamp, title, ids, sizes, redirect, patrolled, loginfo, tags, sha1 Default: title|timestamp|ids</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set rcshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, redirect, !redirect, patrolled, !patrolled, unpatrolled</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="grclimit">
          <xs:annotation>
            <xs:documentation>- How many total changes to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="grctype">
          <xs:annotation>
            <xs:documentation>- hich types of changes to show.  Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grctoponly">
          <xs:annotation>
            <xs:documentation>- Only list changes which are the latest revision.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenRedirectsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-redirects">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=redirects which
Returns all redirects to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title" name="grdprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each redirect. title Title of each redirect. fragment Fragment of each redirect, if any. Values (separate with |): pageid, title, fragment Default: pageid|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces.  Note: Due to miser mode, using this may result in fewer than rdlimit results returned before continuing; in extreme cases, zero results may be returned.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria:  fragment Only show redirects with a fragment. !fragment Only show redirects without a fragment. Values (separate with |): fragment, !fragment</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="grdlimit">
          <xs:annotation>
            <xs:documentation>- How many redirects to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenRevisionsType" substitutionGroup="mule:abstract-message-processor" name="query-gen-revisions">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=revisions which Get
revision information.

May be used in several ways:

Get data about a set of pages (last revision), by setting titles or
pageids. Get revisions for one given page, by using titles or pageids
with start, end, or limit. Get data about a set of revisions by setting
their IDs with revids.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="grvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned. May only be used with a single page (mode #2). No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires rvprop=content). For performance reasons, if this option is used, rvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides rvdiffto. If rvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for rvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvstartid">
          <xs:annotation>
            <xs:documentation>- From which revision ID to start enumeration.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvendid">
          <xs:annotation>
            <xs:documentation>- Stop revision enumeration on this revision ID. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvstart">
          <xs:annotation>
            <xs:documentation>- From which revision timestamp to start enumeration. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvend">
          <xs:annotation>
            <xs:documentation>- Enumerate up to this timestamp. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="grvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rvstart has to be before rvend. older List newest first (default). Note: rvstart has to be later than rvend. May only be used with a single page (mode #2). One value: newer, older.Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvuser">
          <xs:annotation>
            <xs:documentation>- Only include revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Exclude revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvcontinue">
          <xs:annotation>
            <xs:documentation>- hen more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenSearchType" substitutionGroup="mule:abstract-message-processor" name="query-gen-search">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=search which Perform a
full text search.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gsrsearch">
          <xs:annotation>
            <xs:documentation>- Search for all page titles (or content) that have this value.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gsrnamespace">
          <xs:annotation>
            <xs:documentation>- Search only within these namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gsrwhat">
          <xs:annotation>
            <xs:documentation>- Which type of search to perform.  One value: title, text, nearmatch</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="totalhits|suggestion" name="gsrinfo">
          <xs:annotation>
            <xs:documentation>- Which metadata to return.  Values (separate with |): totalhits, suggestion Default: totalhits|suggestion</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="size|wordcount|timestamp|snippet" name="gsrprop">
          <xs:annotation>
            <xs:documentation>- Which properties to return:  size Adds the size of the page in bytes. wordcount Adds the word count of the page. timestamp Adds the timestamp of when the page was last edited. snippet Adds a parsed snippet of the page. titlesnippet Adds a parsed snippet of the page title. redirectsnippet Adds a parsed snippet of the redirect title. redirecttitle Adds the title of the matching redirect. sectionsnippet Adds a parsed snippet of the matching section title. sectiontitle Adds the title of the matching section. score Deprecated and ignored. hasrelated Deprecated and ignored. Values (separate with |): size, wordcount, timestamp, score, snippet, titlesnippet, redirecttitle, redirectsnippet, sectiontitle, sectionsnippet, hasrelated Default: size|wordcount|timestamp|snippet</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gsroffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gsrlimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return.  No more than 50 (500 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gsrinterwiki">
          <xs:annotation>
            <xs:documentation>- Include interwiki results in the search, if available.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenTemplatesType" substitutionGroup="mule:abstract-message-processor" name="query-gen-templates">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=templates which
Returns all pages transcluded on the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenTemplatesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtlnamespace">
          <xs:annotation>
            <xs:documentation>- how templates in this namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gtllimit">
          <xs:annotation>
            <xs:documentation>- How many templates to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtltemplates">
          <xs:annotation>
            <xs:documentation>- Only list these templates. Useful for checking whether a certain page uses a certain template. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gtldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenTranscludedInType" substitutionGroup="mule:abstract-message-processor" name="query-gen-transcluded-in">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=transcludedin which
Find all pages that transclude the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenTranscludedInType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title|redirect" name="gtiprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each page. title Title of each page. redirect Flag if the page is a redirect. Values (separate with |): pageid, title, redirect Default: pageid|title|redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtinamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtishow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: redirect Only show redirects. !redirect Only show non-redirects.Values (separate with |): redirect, !redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gtilimit">
          <xs:annotation>
            <xs:documentation>- How many to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gticontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenWatchListType" substitutionGroup="mule:abstract-message-processor" name="query-gen-watch-list">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=watchlist which Get
recent changes to pages in the current user's watchlist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenWatchListType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlallrev">
          <xs:annotation>
            <xs:documentation>- Include multiple revisions of the same page within given timeframe.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 wluser Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwluser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gwldir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wlstart has to be before wlend. older List newest first (default). Note: wlstart has to be later than wlend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gwllimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title|flags" name="gwlprop">
          <xs:annotation>
            <xs:documentation>- Which additional items to get:  ids Adds revision IDs and page IDs. title Adds title of the page. flags Adds flags for the edit. user Adds the user who made the edit. userid Adds user ID of whom made the edit. comment Adds comment of the edit. parsedcomment Adds parsed comment of the edit. timestamp Adds timestamp of the edit. patrol Tags edits that are patrolled. sizes Adds the old and new lengths of the page. notificationtimestamp Adds timestamp of when the user was last notified about the edit. loginfo Adds log information where appropriate. Values (separate with |): ids, title, flags, user, userid, comment, parsedcomment, timestamp, patrol, sizes, notificationtimestamp, loginfo Default: ids|title|flags</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set wlshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, patrolled, !patrolled, unread, !unread</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="gwltype">
          <xs:annotation>
            <xs:documentation>- Which types of changes to show:  edit Regular page edits. external External changes. new Page creations. log Log entries. Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlowner">
          <xs:annotation>
            <xs:documentation>- Used along with wltoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwltoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="QueryGenWatchListRawType" substitutionGroup="mule:abstract-message-processor" name="query-gen-watch-list-raw">
    <xs:annotation>
      <xs:documentation>Fetch data from and about MediaWiki with generator=watchlistraw which Get
all pages on the current user's watchlist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QueryGenWatchListRawType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="prop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for the queried pages. Values (separate with |): categories, categoryinfo, contributors, deletedrevisions, duplicatefiles, extlinks, extracts, fileusage, flowinfo, globalusage, imageinfo, images, info, iwlinks, langlinks, links, linkshere, pageimages, pageprops, pageterms, redirects, revisions, stashimageinfo, templates, transcludedin, transcodestatus, videoinfo</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="list">
          <xs:annotation>
            <xs:documentation>- Which Which lists to get.. Values (separate with |): abusefilters, abuselog, allcategories, alldeletedrevisions, allfileusages, allimages, alllinks, allpages, allredirects, alltransclusions, allusers, backlinks, betafeatures, blocks, categorymembers, centralnoticelogs, checkuser, checkuserlog, deletedrevs, embeddedin, exturlusage, filearchive, gadgetcategories, gadgets, globalallusers, globalblocks, globalgroups, imageusage, iwbacklinks, langbacklinks, logevents, messagecollection, mmsites, pagepropnames, pageswithprop, prefixsearch, protectedtitles, querypage, random, recentchanges, search, tags, usercontribs, users, watchlist, watchlistraw, wikisets</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gwrlimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get:  changed Adds timestamp of when the user was last notified about the edit. Values (separate with |): changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrshow">
          <xs:annotation>
            <xs:documentation>- Only list items that meet these criteria.  Values (separate with |): changed, !changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrowner">
          <xs:annotation>
            <xs:documentation>- Used along with wrtoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gwrtoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gwrdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wrstart has to be before wrend. older List newest first (default). Note: wrstart has to be later than wrend. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="indexpageids">
          <xs:annotation>
            <xs:documentation>- Include an additional pageids section listing all returned page IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="export">
          <xs:annotation>
            <xs:documentation>- Export the current revisions of all given or generated pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exportnowrap">
          <xs:annotation>
            <xs:documentation>- Return the export XML without wrapping it in an XML result (same format as Special:Export). Can only be used with export.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="iwurl">
          <xs:annotation>
            <xs:documentation>- Whether to get the full URL if the title is an interwiki link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueId">
          <xs:annotation>
            <xs:documentation>- When present, formats query-continue as key-value pairs that should simply be merged into the original request. This parameter must be set to an empty string in the initial query. This parameter is recommended for all new development, and will be made default in the next API version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generator">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="LoginType" substitutionGroup="mule:abstract-message-processor" name="login">
    <xs:annotation>
      <xs:documentation>Log in and get authentication cookies.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="LoginType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="lgname">
          <xs:annotation>
            <xs:documentation>- User name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="lgpassword">
          <xs:annotation>
            <xs:documentation>- Password.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="lgdomain">
          <xs:annotation>
            <xs:documentation>- Domain (optional).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="token">
          <xs:annotation>
            <xs:documentation>- Login token obtained in first request.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="GetmainModuleType" substitutionGroup="mule:abstract-message-processor" name="getmain-module">
    <xs:annotation>
      <xs:documentation>This is the main module.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GetmainModuleType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="action">
          <xs:annotation>
            <xs:documentation>- action</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation>- Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="LogoutType" substitutionGroup="mule:abstract-message-processor" name="logout">
    <xs:annotation>
      <xs:documentation>Log out and clear session data.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="LogoutType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="OpenSearchType" substitutionGroup="mule:abstract-message-processor" name="open-search">
    <xs:annotation>
      <xs:documentation>Search the wiki using the OpenSearch protocol.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OpenSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json @param format - The format of the output. One value: json, jsonfm, xml, xmlfm. Default: json * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="search">
          <xs:annotation>
            <xs:documentation>- Search string.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="limit">
          <xs:annotation>
            <xs:documentation>- Maximum number of results to return.No more than 100 (100 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="namespace">
          <xs:annotation>
            <xs:documentation>- Namespaces to search.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="suggest">
          <xs:annotation>
            <xs:documentation>- Do nothing if $wgEnableOpenSearchSuggest is false.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="return" name="redirects">
          <xs:annotation>
            <xs:documentation>How to handle redirects: return Return the redirect itself. resolve Return the target page. May return fewer than limit results. For historical reasons, the default is "return" for format=json and "resolve" for other formats. One value: return, resolve</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="ParseContentType" substitutionGroup="mule:abstract-message-processor" name="parse-content">
    <xs:annotation>
      <xs:documentation>Parses content and returns parser output. See the various prop-modules of
action=query to get information from the current version of a page. There
are several ways to specify the text to parse: Specify a page or
revision, using page, pageid, or oldid. Specify content explicitly, using
text, title, and contentmodel. Specify only a summary to parse. prop
should be given an empty value</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ParseContentType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="title">
          <xs:annotation>
            <xs:documentation>- Title of page the text belongs to. If omitted, contentmodel must be specified, and API will be used as the title.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="text">
          <xs:annotation>
            <xs:documentation>- Text to parse. Use title or contentmodel to control the content model.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="summary">
          <xs:annotation>
            <xs:documentation>- Summary to parse.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="page">
          <xs:annotation>
            <xs:documentation>- Parse the content of this page. Cannot be used together with text and title.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageid">
          <xs:annotation>
            <xs:documentation>- Parse the content of this page. Overrides page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- If page or pageid is set to a redirect, resolve it.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="oldid">
          <xs:annotation>
            <xs:documentation>- Parse the content of this revision. Overrides page and pageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="text|langlinks|categories|links|templates|images|externallinks|sections|revid|displaytitle|iwlinks|properties" name="prop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to get: Values (separate with |): text, langlinks, categories, categorieshtml, links, templates, images, externallinks, sections, revid, displaytitle, headitems, headhtml, modules, indicators, iwlinks, wikitext, properties, limitreportdata, limitreporthtml Default: text|langlinks|categories|links|templates |images|externallinks| sections|revid|displaytitle|iwlinks|properties</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pst">
          <xs:annotation>
            <xs:documentation>- Do a pre-save transform on the input before parsing it. Only valid when used with text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="onlypst">
          <xs:annotation>
            <xs:documentation>- Do a pre-save transform (PST) on the input, but don't parse it. Returns the same wikitext, after a PST has been applied. Only valid when used with text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="effectivelanglinks">
          <xs:annotation>
            <xs:documentation>- Includes language links supplied by extensions (for use with prop=langlinks).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="section">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number or when new generate a new section. new section is only honored when specifying text.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="sectiontitle">
          <xs:annotation>
            <xs:documentation>- New section title when section is new.Unlike page editing, this does not fall back to summary when omitted or empty.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="disablepp">
          <xs:annotation>
            <xs:documentation>- Disable the PP Report from the parser output.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="disableeditsection">
          <xs:annotation>
            <xs:documentation>- Disable edit section links from the parser output.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="generatexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree (requires content model wikitext).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="preview">
          <xs:annotation>
            <xs:documentation>- Parse in preview mode.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="sectionpreview">
          <xs:annotation>
            <xs:documentation>- Parse in section preview mode (enables preview mode too).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="disabletoc">
          <xs:annotation>
            <xs:documentation>- Disable table of contents in output.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="contentformat">
          <xs:annotation>
            <xs:documentation>- Content serialization format used for the input text. Only valid when used with text. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="contentmodel">
          <xs:annotation>
            <xs:documentation>- Content model of the input text. If omitted, title must be specified, and default will be the model of the specified title. Only valid when used with text. One value: wikitext, javascript, json, css, text, SecurePoll, MassMessageListContent, flow-board, Scribunto, JsonSchema</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="mobileformat">
          <xs:annotation>
            <xs:documentation>- Return parse output in a format suitable for mobile devices.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="noimages">
          <xs:annotation>
            <xs:documentation>- Disable images in mobile output.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="mainpage">
          <xs:annotation>
            <xs:documentation>- Apply mobile main page transformations. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllCategoriesType" substitutionGroup="mule:abstract-message-processor" name="purge-all-categories">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='AllCategories' which enumerate all categories.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacfrom">
          <xs:annotation>
            <xs:documentation>- The category to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacto">
          <xs:annotation>
            <xs:documentation>- The category to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacprefix">
          <xs:annotation>
            <xs:documentation>- Search for all category titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gacdir">
          <xs:annotation>
            <xs:documentation>- Direction to sort in. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacmin">
          <xs:annotation>
            <xs:documentation>- Only return categories with at least this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacmax">
          <xs:annotation>
            <xs:documentation>- Only return categories with at most this many members.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaclimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gacprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: size Adds number of pages in the category. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): size, hidden Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="purge-all-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='alldeletedrevisions' which list all deleted revisions by a user or in a
namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="gadrprop">
          <xs:annotation>
            <xs:documentation>Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned. No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires adrprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires adrprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires adrprop=content). For performance reasons, if this option is used, adrlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides adrdiffto. If adrsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for adrdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadruser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in this namespace. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 100, 101, 108, 109, 118, 119, 710, 711, 446, 447, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.May only be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at.May only be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gadrdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: adrstart has to be before adrend. older List newest first (default). Note: adrstart has to be later than adrend. One value: newer, older. Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrfrom">
          <xs:annotation>
            <xs:documentation>- Start listing at this title.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrto">
          <xs:annotation>
            <xs:documentation>- Stop listing at this title.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrprefix">
          <xs:annotation>
            <xs:documentation>- Search for all page titles that begin with this value.Cannot be used with adruser.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.Cannot be used with adruser. -</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gadrgeneratetitles">
          <xs:annotation>
            <xs:documentation>- When being used as a generator, generate titles rather than revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllFileUsagesType" substitutionGroup="mule:abstract-message-processor" name="purge-all-file-usages">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='allfileusages' which list all file usages, including non-existing.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllFileUsagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaffrom">
          <xs:annotation>
            <xs:documentation>- The title of the file to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafto">
          <xs:annotation>
            <xs:documentation>- The title of the file to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafprefix">
          <xs:annotation>
            <xs:documentation>- Search for all file titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gafunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct file titles. Cannot be used with afprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="gafprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the using page (cannot be used with afunique). title Adds the title of the file. Values (separate with |): ids, title. Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaflimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gafdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllImagesType" substitutionGroup="mule:abstract-message-processor" name="purge-all-images">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='allimages'
which enumerate all images sequentially..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="name" name="gaisort">
          <xs:annotation>
            <xs:documentation>- Property to sort by.One value: name, timestamp Default: name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gaidir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending, newer, older Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaifrom">
          <xs:annotation>
            <xs:documentation>- The image title to start enumerating from. Can only be used with gaisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaito">
          <xs:annotation>
            <xs:documentation>- The image title to stop enumerating at. Can only be used with aisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaistart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from. Can only be used with aisort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating. Can only be used with aisort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|url" name="gaiprop">
          <xs:annotation>
            <xs:documentation>- Which file information to get. Values (separate with |): timestamp, user, userid, comment, parsedcomment, canonicaltitle, url, size, dimensions, sha1, mime, mediatype, metadata, commonmetadata, extmetadata, bitdepth. Default: timestamp|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiprefix">
          <xs:annotation>
            <xs:documentation>- Search for all image titles that begin with this value. Can only be used with aisort=name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiminsize">
          <xs:annotation>
            <xs:documentation>- Limit to images with at least this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaimaxsize">
          <xs:annotation>
            <xs:documentation>- Limit to images with at most this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaisha1">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image. Overrides aisha1base36.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaisha1base36">
          <xs:annotation>
            <xs:documentation>- SHA1 hash of image in base 36 (used in MediaWiki).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaiuser">
          <xs:annotation>
            <xs:documentation>- Only return files uploaded by this user. Can only be used with aisort=timestamp. Cannot be used together with aifilterbots.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gaifilterbots">
          <xs:annotation>
            <xs:documentation>- How to filter files uploaded by bots. Can only be used with aisort=timestamp. Cannot be used together with aiuser. One value: all, bots, nobots Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gaimime">
          <xs:annotation>
            <xs:documentation>- Disabled due to miser mode. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gailimit">
          <xs:annotation>
            <xs:documentation>- How many images in total to return.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllLinksType" substitutionGroup="mule:abstract-message-processor" name="purge-all-links">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='alllinks'
which enumerate all links that point to a given namespace..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galfrom">
          <xs:annotation>
            <xs:documentation>- The title of the link to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galto">
          <xs:annotation>
            <xs:documentation>- The title of the link to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galprefix">
          <xs:annotation>
            <xs:documentation>- Search for all linked titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="galunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct linked titles. Cannot be used with alprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="galprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the linking page (cannot be used with alunique). title Adds the title of the link. Values (separate with |): ids, title. Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="galnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gallimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="galdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending. Default: ascending.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllPagesType" substitutionGroup="mule:abstract-message-processor" name="purge-all-pages">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='allpages'
which enumerate all pages sequentially in a given namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllPagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapfrom">
          <xs:annotation>
            <xs:documentation>- The page title to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapto">
          <xs:annotation>
            <xs:documentation>- The page title to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprefix">
          <xs:annotation>
            <xs:documentation>- Search for all page titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gapnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapfilterredir">
          <xs:annotation>
            <xs:documentation>- Which pages to list. One value: all, redirects, nonredirects. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapminsize">
          <xs:annotation>
            <xs:documentation>- Limit to pages with at least this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapmaxsize">
          <xs:annotation>
            <xs:documentation>- Limit to pages with at most this many bytes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprtype">
          <xs:annotation>
            <xs:documentation>- Limit to protected pages only.Values (separate with |): edit, move, upload</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gapprlevel">
          <xs:annotation>
            <xs:documentation>- Filter protections based on protection level (must be used with apprtype= parameter). Values (separate with |): Can be empty, or autoconfirmed, sysop, superprotect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapprfiltercascade">
          <xs:annotation>
            <xs:documentation>- Filter protections based on cascadingness (ignored when apprtype isn't set). One value: cascading, noncascading, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gaplimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gapdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapfilterlanglinks">
          <xs:annotation>
            <xs:documentation>- Filter based on whether a page has langlinks. Note that this may not consider langlinks added by extensions. One value: withlanglinks, withoutlanglinks, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gapprexpiry">
          <xs:annotation>
            <xs:documentation>- Which protection expiry to filter the page on: indefinite Get only pages with indefinite protection expiry. definite Get only pages with a definite (specific) protection expiry. all Get pages with any protections expiry. One value: indefinite, definite, all. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllRedirectsType" substitutionGroup="mule:abstract-message-processor" name="purge-all-redirects">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='allredirects' which list all redirects to a namespace.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garfrom">
          <xs:annotation>
            <xs:documentation>- The title of the redirect to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garto">
          <xs:annotation>
            <xs:documentation>- The title of the redirect to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garprefix">
          <xs:annotation>
            <xs:documentation>- Search for all target pages that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="garunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct target pages. Cannot be used with arprop=ids|fragment|interwiki. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="garprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the redirecting page (cannot be used with arunique). title Adds the title of the redirect. fragment Adds the fragment from the redirect, if any (cannot be used with arunique). interwiki Adds the interwiki prefix from the redirect, if any (cannot be used with arunique). Values (separate with |): ids, title, fragment, interwiki.Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="garnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="garlimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gardir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending. Default: ascending.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeAllTransclusionsType" substitutionGroup="mule:abstract-message-processor" name="purge-all-transclusions">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='alltransclusions' which List all transclusions (pages embedded using
{{x), including non-existing.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeAllTransclusionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatfrom">
          <xs:annotation>
            <xs:documentation>- The title of the transclusion to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatto">
          <xs:annotation>
            <xs:documentation>- The title of the transclusion to stop enumerating at.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatprefix">
          <xs:annotation>
            <xs:documentation>- Search for all transclused titles that begin with this value.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gatunique">
          <xs:annotation>
            <xs:documentation>- Only show distinct transcluded titles. Cannot be used with gatprop=ids. When used as a generator, yields target pages instead of source pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title" name="gatprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID of the transcluding page (cannot be used with arunique). title Adds the title of the transclusion. Values (separate with |): ids, title.Default: title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gatnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. One value: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gatlimit">
          <xs:annotation>
            <xs:documentation>- How many total items to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gatdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list.One value: ascending, descending. Default: ascending.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeBackLinksType" substitutionGroup="mule:abstract-message-processor" name="purge-back-links">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='backlinks'
which find all pages that link to the given page</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gbltitle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with gblpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblpageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with bltitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblnamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="all" name="gblfilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when blredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects. Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If blredirect is enabled, limit applies to each level separately (which means up to 2 * bllimit results may be returned). No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gblredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeCategoriesType" substitutionGroup="mule:abstract-message-processor" name="purge-categories">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='backlinks'
which find all pages that link to the given page</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeCategoriesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get for each category: sortkey Adds the sortkey (hexadecimal string) and sortkey prefix (human-readable part) for the category. timestamp Adds timestamp of when the category was added. hidden Tags categories that are hidden with __HIDDENCAT__. Values (separate with |): sortkey, timestamp, hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclshow">
          <xs:annotation>
            <xs:documentation>- Which kind of categories to show. Values (separate with |): hidden, !hidden</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gcllimit">
          <xs:annotation>
            <xs:documentation>- How many categories to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gclcategories">
          <xs:annotation>
            <xs:documentation>- Only list these categories. Useful for checking whether a certain page is in a certain category. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gcldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeCategoryMembersType" substitutionGroup="mule:abstract-message-processor" name="purge-category-members">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the
https://www.wikidata.org/w/api
.php?action=query&amp;prop=categories&amp;titles=Albert%20Einsteingenerator type
='categorymembers' which find all pages that link to the given page</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeCategoryMembersType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmtitle">
          <xs:annotation>
            <xs:documentation>- Which category to enumerate (required). Must include the Category: prefix. Cannot be used together with gcmpageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmpageid">
          <xs:annotation>
            <xs:documentation>- Page ID of the category to enumerate. Cannot be used together with cmtitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="gcmprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. sortkey Adds the sortkey used for sorting in the category (hexadecimal string). sortkeyprefix Adds the sortkey prefix used for sorting in the category (human-readable part of the sortkey). type Adds the type that the page has been categorised as (page, subcat or file). timestamp Adds the timestamp of when the page was included. Values (separate with |): ids, title, sortkey, sortkeyprefix, type, timestamp Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Note that cmtype=subcat or cmtype=file may be used instead of cmnamespace=14 or 6. Note: Due to miser mode, using this may result in fewer than cmlimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmtype">
          <xs:annotation>
            <xs:documentation>- Which type of category members to include. Ignored when cmsort=timestamp is set. Values (separate with |): page, subcat, file Default: page|subcat|file</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmlimit">
          <xs:annotation>
            <xs:documentation>- The maximum number of pages to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmsort">
          <xs:annotation>
            <xs:documentation>- Property to sort by. One value: sortkey, timestamp.Default: sortkey</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmdir">
          <xs:annotation>
            <xs:documentation>- In which direction to sort. One value: asc, desc, ascending, descending, newer, older Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstart">
          <xs:annotation>
            <xs:documentation>- Timestamp to start listing from. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmend">
          <xs:annotation>
            <xs:documentation>- Timestamp to end listing at. Can only be used with cmsort=timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstarthexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to start listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmendhexsortkey">
          <xs:annotation>
            <xs:documentation>- Sortkey to end listing from, as returned by gcmprop=sortkey. Can only be used with gcmsort=sortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmstartsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to start listing from. Can only be used with cmsort=sortkey. Overrides gcmstarthexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gcmendsortkeyprefix">
          <xs:annotation>
            <xs:documentation>- Sortkey prefix to end listing BEFORE (not at, if this value occurs it will not be included!). Can only be used with gcmsort=sortkey. Overrides gcmendhexsortkey.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeDeletedRevisionsType" substitutionGroup="mule:abstract-message-processor" name="purge-deleted-revisions">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='deletedrevisions' which get deleted revision information.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeDeletedRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned.No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires drvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires drvprop=content). For performance reasons, if this option is used, drvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides drvdiffto. If drvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for drvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvend">
          <xs:annotation>
            <xs:documentation>- The timestamp to stop enumerating at. Ignored when processing a list of revision IDs.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvuser">
          <xs:annotation>
            <xs:documentation>- Only list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list revisions by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdrvcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeDuplicateFilesType" substitutionGroup="mule:abstract-message-processor" name="purge-duplicate-files">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='duplicatefiles' which List all files that are duplicates of the given
files based on hash values..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeDuplicateFilesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdflimit">
          <xs:annotation>
            <xs:documentation>- How many duplicate files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdfcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdfdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gdflocalonly">
          <xs:annotation>
            <xs:documentation>- Look only for files in the local repository.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeEmbeddedInType" substitutionGroup="mule:abstract-message-processor" name="purge-embedded-in">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='embeddedin' which Find all pages that embed (transclude) the given
title..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeEmbeddedInType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geititle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with geipageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geipageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with geititle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geicontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geinamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geidir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geifilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. One value: all, redirects, nonredirects Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geilimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeExturlUsageType" substitutionGroup="mule:abstract-message-processor" name="purge-exturl-usage">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='embeddedin' which Find all pages that embed (transclude) the given
title..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeExturlUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the ID of page. title Adds the title and namespace ID of the page. url Adds the URL used in the page. Values (separate with |): ids, title, url Default: ids|title|url</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuprotocol">
          <xs:annotation>
            <xs:documentation>- Protocol of the URL. If empty and euquery set, the protocol is http. Leave both this and euquery empty to list all external links. One value: Can be empty, or bitcoin, ftp, ftps, geo, git, gopher, http, https, irc, ircs, magnet, mailto, mms, news, nntp, redis, sftp, sip, sips, sms, ssh, svn, tel, telnet, urn, worldwind, xmpp Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuquery">
          <xs:annotation>
            <xs:documentation>- Search string without protocol. See Special:LinkSearch. Leave empty to list all external links.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geunamespace">
          <xs:annotation>
            <xs:documentation>- The page namespaces to enumerate. Note: Due to miser mode, using this may result in fewer than eulimit results returned before continuing; in extreme cases, zero results may be returned. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geulimit">
          <xs:annotation>
            <xs:documentation>- How many pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="geuexpandurl">
          <xs:annotation>
            <xs:documentation>- Expand protocol-relative URLs with the canonical protocol.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeFileUsageType" substitutionGroup="mule:abstract-message-processor" name="purge-file-usage">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='fileusage'
which Find all pages that use the given files.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeFileUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gfuprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gfunamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gfushow">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gfulimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gfucontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeImagesType" substitutionGroup="mule:abstract-message-processor" name="purge-images">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='images'
which Returns all files contained on the given pages..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeImagesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimlimit">
          <xs:annotation>
            <xs:documentation>- How many files to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimimages">
          <xs:annotation>
            <xs:documentation>- Only list these files. Useful for checking whether a certain page has a certain file. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gimdir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeImageUsageType" substitutionGroup="mule:abstract-message-processor" name="purge-image-usage">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='imageusage' which Find all pages that use the given image title..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeImageUsageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giutitle">
          <xs:annotation>
            <xs:documentation>- Title to search. Cannot be used together with iupageid.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giupageid">
          <xs:annotation>
            <xs:documentation>- Page ID to search. Cannot be used together with iutitle.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giucontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giunamespace">
          <xs:annotation>
            <xs:documentation>- The namespace to enumerate. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giudir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giufilterredir">
          <xs:annotation>
            <xs:documentation>- How to filter for redirects. If set to nonredirects when iuredirect is enabled, this is only applied to the second level. One value: all, redirects, nonredirects.Default: all</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giulimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. If iuredirect is enabled, the limit applies to each level separately (which means up to 2 * iulimit results may be returned). No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giuredirect">
          <xs:annotation>
            <xs:documentation>- If linking page is a redirect, find all pages that link to that redirect as well. Maximum limit is halved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeInterwikiBackLinksType" substitutionGroup="mule:abstract-message-processor" name="purge-interwiki-back-links">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='iwbacklinks' which Find all pages that link to the given interwiki
link. Can be used to find all links with a prefix, or all links to a
title (with a given prefix). Using neither parameter is effectively
"all interwiki links"...</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeInterwikiBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblprefix">
          <xs:annotation>
            <xs:documentation>- Prefix for the interwiki.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbltitle">
          <xs:annotation>
            <xs:documentation>- Interwiki link to search for. Must be used with giwblblprefix.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: iwprefix Adds the prefix of the interwiki. iwtitle Adds the title of the interwiki. Values (separate with |): iwprefix, iwtitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="giwbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeLangBackLinksType" substitutionGroup="mule:abstract-message-processor" name="purge-lang-back-links">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='langbacklinks' which Find all pages that link to the given language
link. Can be used to find all links with a language code, or all links to
a title (with a given language). Using neither parameter is effectively
"all language links". Note that this may not consider language links
added by extensions..</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeLangBackLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbllang">
          <xs:annotation>
            <xs:documentation>- Language for the language link.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbltitle">
          <xs:annotation>
            <xs:documentation>- Language link to search for. Must be used with lbllang.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glblcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbllimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return. No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glblprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: lllang Adds the language code of the language link. lltitle Adds the title of the language link. Values (separate with |): lllang, lltitle Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glbldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending. Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeLinksType" substitutionGroup="mule:abstract-message-processor" name="purge-links">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='links'
which Returns all links from the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeLinksType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gplnamespace">
          <xs:annotation>
            <xs:documentation>- Show links in these namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpllimit">
          <xs:annotation>
            <xs:documentation>- How many links to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gplcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpltitles">
          <xs:annotation>
            <xs:documentation>- Only list links to these titles. Useful for checking whether a certain page links to a certain title. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeLinkShereType" substitutionGroup="mule:abstract-message-processor" name="purge-link-shere">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='linkshere'
which Find all pages that link to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeLinkShereType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhprop">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhnamespace">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhshow">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhlimit">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="glhcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeMessageCollectionType" substitutionGroup="mule:abstract-message-processor" name="purge-message-collection">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='linkshere'
which Find all pages that link to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeMessageCollectionType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gmcgroup">
          <xs:annotation>
            <xs:documentation>- Message group.This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="en" name="gmclanguage">
          <xs:annotation>
            <xs:documentation>- Language code. Default: en</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="500" name="gmclimit">
          <xs:annotation>
            <xs:documentation>- How many messages to show (after filtering). No more than 5,000 (5,000 for bots) allowed. Default: 500</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gmcoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue. Default: (empty)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="!optional|!ignored" name="gmcfilter">
          <xs:annotation>
            <xs:documentation>- Message collection filters. Use ! to negate condition. For example !fuzzy means list only all non-fuzzy messages. Filters are applied in the order given. fuzzy Messages with fuzzy tag. optional Messages which should be translated only if changes are necessary. ignored Messages which are never translated. hastranslation Messages which have a translation regardless if it is fuzzy or not. translated Messages which have a translation which is not fuzzy. changed Messages which has been translated or changed since last export. reviewer:# Messages where given user ID # is among reviewers. last-translator:# Messages where given user ID # is the last translator. Separate values with |. Maximum number of values is 50 (500 for bots). Default: !optional|!ignored</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="definition|translation" name="gmcprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: definition Message definition. translation Current translation (without !!FUZZY!! string if any, use the tags to check for outdated or broken translations). tags Message tags, like optional, ignored and fuzzy. properties Message properties, like status, revision, last-translator. Can vary between messages. revision Deprecated! Use mcprop=properties. Values (separate with |): definition, translation, tags, revision, properties Default:definition|translation</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgePagesWithPropType" substitutionGroup="mule:abstract-message-processor" name="purge-pages-with-prop">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='pageswithprop' which List all pages using a given page property.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgePagesWithPropType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gpwppropname">
          <xs:annotation>
            <xs:documentation>- Page prop for which to enumerate pages.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title" name="gpwpprop">
          <xs:annotation>
            <xs:documentation>- Which pieces of information to include: ids Adds the page ID. title Adds the title and namespace ID of the page. value Adds the value of the page prop. Values (separate with |): ids, title, value Default: ids|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gpwpcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gpwplimit">
          <xs:annotation>
            <xs:documentation>-The maximum number of pages to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gpwpdir">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgePrefixSearchType" substitutionGroup="mule:abstract-message-processor" name="purge-prefix-search">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='prefixsearch' which Perform a prefix search for page titles.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgePrefixSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gpssearch">
          <xs:annotation>
            <xs:documentation>- Search string.This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gpsnamespace">
          <xs:annotation>
            <xs:documentation>- Namespaces to search. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gpslimit">
          <xs:annotation>
            <xs:documentation>- Maximum number of results to return.No more than 100 (200 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gpsoffset">
          <xs:annotation>
            <xs:documentation>- Number of results to skip.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeProtectedTitlesType" substitutionGroup="mule:abstract-message-processor" name="purge-protected-titles">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='protectedtitles' List all titles protected from creation.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeProtectedTitlesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptnamespace">
          <xs:annotation>
            <xs:documentation>- Only list titles in these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptlevel">
          <xs:annotation>
            <xs:documentation>- Only list titles with these protection levels.Values (separate with |): autoconfirmed, sysop, superprotect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gptlimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: ptstart has to be before ptend. older List newest first (default). Note: ptstart has to be later than ptend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptstart">
          <xs:annotation>
            <xs:documentation>- Start listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gptend">
          <xs:annotation>
            <xs:documentation>- Stop listing at this protection timestamp.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="timestamp|level" name="gptprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: timestamp - Adds the timestamp of when protection was added. user - Adds the user that added the protection. userid Adds the user ID that added the protection. comment Adds the comment for the protection. parsedcomment Adds the parsed comment for the protection. expiry Adds the timestamp of when the protection will be lifted. level Adds the protection level. Values (separate with |): timestamp, user, userid, comment, parsedcomment, expiry, level Default: timestamp|level</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="ptcontinue">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeQueryPageType" substitutionGroup="mule:abstract-message-processor" name="purge-query-page">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='querypage'
which gets a list provided by a QueryPage-based special page.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeQueryPageType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gqppage">
          <xs:annotation>
            <xs:documentation>- The name of the special page. Note, this is case sensitive. This parameter is required.One value: Ancientpages, BrokenRedirects, Deadendpages, DoubleRedirects, ListDuplicatedFiles, Listredirects, Lonelypages, Longpages, MediaStatistics, Mostcategories, Mostimages, Mostinterwikis, Mostlinkedcategories, Mostlinkedtemplates, Mostlinked, Mostrevisions, Fewestrevisions, Shortpages, Uncategorizedcategories, Uncategorizedpages, Uncategorizedimages, Uncategorizedtemplates, Unusedcategories, Unusedimages, Wantedcategories, Wantedfiles, Wantedpages, Wantedtemplates, Unwatchedpages, Unusedtemplates, Withoutinterwiki, DisambiguationPages, DisambiguationPageLinks</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gqpoffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gqplimit">
          <xs:annotation>
            <xs:documentation>- Number of results to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeRandomType" substitutionGroup="mule:abstract-message-processor" name="purge-random">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='random'
which gets a set of random pages. Pages are listed in a fixed sequence,
only the starting point is random. This means that if, for example, Main
Page is the first random page in the list, List of fictional monkeys will
always be second, List of people on stamps of Vanuatu third, etc. If the
number of pages in the namespace is lower than rnlimit, fewer pages will
be returned. The same page will not be returned twice.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeRandomType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grnnamespace">
          <xs:annotation>
            <xs:documentation>- Return pages in these namespaces only.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="1" name="grnlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many random pages will be returned. No more than 10 (20 for bots) allowed.Default: 1</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grnredirect">
          <xs:annotation>
            <xs:documentation>- Load a random redirect instead of a random page.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeRecentChangesType" substitutionGroup="mule:abstract-message-processor" name="purge-recent-changes">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='recentchanges' Enumerate recent changes.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeRecentChangesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="grcdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rcstart has to be before rcend. older List newest first (default). Note: rcstart has to be later than rcend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only these namespaces.Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcuser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grctag">
          <xs:annotation>
            <xs:documentation>- Only list changes tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="title|timestamp|ids" name="grcprop">
          <xs:annotation>
            <xs:documentation>- Include additional pieces of information: user Adds the user responsible for the edit and tags if they are an IP. userid Adds the user ID responsible for the edit. comment Adds the comment for the edit. parsedcomment Adds the parsed comment for the edit. flags Adds flags for the edit. timestamp Adds timestamp of the edit. title Adds the page title of the edit. ids Adds the page ID, recent changes ID and the new and old revision ID. sizes Adds the new and old page length in bytes. redirect Tags edit if page is a redirect. patrolled Tags patrollable edits as being patrolled or unpatrolled. loginfo Adds log information (log ID, log type, etc) to log entries. tags Lists tags for the entry. sha1 Adds the content checksum for entries associated with a revision. Values (separate with |): user, userid, comment, parsedcomment, flags, timestamp, title, ids, sizes, redirect, patrolled, loginfo, tags, sha1 Default: title|timestamp|ids</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grcshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set rcshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, redirect, !redirect, patrolled, !patrolled, unpatrolled</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="grclimit">
          <xs:annotation>
            <xs:documentation>- How many total changes to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="grctype">
          <xs:annotation>
            <xs:documentation>- hich types of changes to show.  Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grctoponly">
          <xs:annotation>
            <xs:documentation>- Only list changes which are the latest revision.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grccontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeRedirectsType" substitutionGroup="mule:abstract-message-processor" name="purge-redirects">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='redirects'
which Returns all redirects to the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeRedirectsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title" name="grdprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each redirect. title Title of each redirect. fragment Fragment of each redirect, if any. Values (separate with |): pageid, title, fragment Default: pageid|title</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdnamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces.  Note: Due to miser mode, using this may result in fewer than rdlimit results returned before continuing; in extreme cases, zero results may be returned.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria:  fragment Only show redirects with a fragment. !fragment Only show redirects without a fragment. Values (separate with |): fragment, !fragment</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="grdlimit">
          <xs:annotation>
            <xs:documentation>- How many redirects to return.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grdcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeRevisionsType" substitutionGroup="mule:abstract-message-processor" name="purge-revisions">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='revisions'
which Get revision information.

May be used in several ways:

Get data about a set of pages (last revision), by setting titles or
pageids. Get revisions for one given page, by using titles or pageids
with start, end, or limit. Get data about a set of revisions by setting
their IDs with revids.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeRevisionsType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|timestamp|flags|comment|user" name="grvprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get for each revision: ids The ID of the revision. flags Revision flags (minor). timestamp The timestamp of the revision. user User that made the revision. userid User ID of the revision creator. size Length (bytes) of the revision. sha1 SHA-1 (base 16) of the revision. contentmodel Content model ID of the revision. comment Comment by the user for the revision. parsedcomment Parsed comment by the user for the revision. content Text of the revision. tags Tags for the revision. Values (separate with |): ids, flags, timestamp, user, userid, size, sha1, contentmodel, comment, parsedcomment, content, tags Default: ids|timestamp|flags|comment|user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvlimit">
          <xs:annotation>
            <xs:documentation>- Limit how many revisions will be returned. May only be used with a single page (mode #2). No more than 500 (5,000 for bots) allowed.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvexpandtemplates">
          <xs:annotation>
            <xs:documentation>- Expand templates in revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvgeneratexml">
          <xs:annotation>
            <xs:documentation>- Generate XML parse tree for revision content (requires rvprop=content).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvparse">
          <xs:annotation>
            <xs:documentation>- Parse revision content (requires rvprop=content). For performance reasons, if this option is used, rvlimit is enforced to 1.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvsection">
          <xs:annotation>
            <xs:documentation>- Only retrieve the content of this section number.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvdiffto">
          <xs:annotation>
            <xs:documentation>- Revision ID to diff each revision to. Use prev, next and cur for the previous, next and current revision respectively.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvdifftotext">
          <xs:annotation>
            <xs:documentation>- Text to diff each revision to. Only diffs a limited number of revisions. Overrides rvdiffto. If rvsection is set, only that section will be diffed against this text</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvcontentformat">
          <xs:annotation>
            <xs:documentation>- Serialization format used for rvdifftotext and expected for output of content. One value: text/x-wiki, text/javascript, application/json, text/css, text/plain</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvstartid">
          <xs:annotation>
            <xs:documentation>- From which revision ID to start enumeration.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvendid">
          <xs:annotation>
            <xs:documentation>- Stop revision enumeration on this revision ID. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvstart">
          <xs:annotation>
            <xs:documentation>- From which revision timestamp to start enumeration. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvend">
          <xs:annotation>
            <xs:documentation>- Enumerate up to this timestamp. May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="grvdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate: newer List oldest first. Note: rvstart has to be before rvend. older List newest first (default). Note: rvstart has to be later than rvend. May only be used with a single page (mode #2). One value: newer, older.Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvuser">
          <xs:annotation>
            <xs:documentation>- Only include revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvexcludeuser">
          <xs:annotation>
            <xs:documentation>- Exclude revisions made by user.May only be used with a single page (mode #2).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvtag">
          <xs:annotation>
            <xs:documentation>- Only list revisions tagged with this tag.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="grvcontinue">
          <xs:annotation>
            <xs:documentation>- hen more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeSearchType" substitutionGroup="mule:abstract-message-processor" name="purge-search">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='search'
which Perform a full text search.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeSearchType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="gsrsearch">
          <xs:annotation>
            <xs:documentation>- Search for all page titles (or content) that have this value.  This parameter is required.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gsrnamespace">
          <xs:annotation>
            <xs:documentation>- Search only within these namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gsrwhat">
          <xs:annotation>
            <xs:documentation>- Which type of search to perform.  One value: title, text, nearmatch</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="totalhits|suggestion" name="gsrinfo">
          <xs:annotation>
            <xs:documentation>- Which metadata to return.  Values (separate with |): totalhits, suggestion Default: totalhits|suggestion</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="size|wordcount|timestamp|snippet" name="gsrprop">
          <xs:annotation>
            <xs:documentation>- Which properties to return:  size Adds the size of the page in bytes. wordcount Adds the word count of the page. timestamp Adds the timestamp of when the page was last edited. snippet Adds a parsed snippet of the page. titlesnippet Adds a parsed snippet of the page title. redirectsnippet Adds a parsed snippet of the redirect title. redirecttitle Adds the title of the matching redirect. sectionsnippet Adds a parsed snippet of the matching section title. sectiontitle Adds the title of the matching section. score Deprecated and ignored. hasrelated Deprecated and ignored. Values (separate with |): size, wordcount, timestamp, score, snippet, titlesnippet, redirecttitle, redirectsnippet, sectiontitle, sectionsnippet, hasrelated Default: size|wordcount|timestamp|snippet</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="gsroffset">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.  Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gsrlimit">
          <xs:annotation>
            <xs:documentation>- How many total pages to return.  No more than 50 (500 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gsrinterwiki">
          <xs:annotation>
            <xs:documentation>- Include interwiki results in the search, if available.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeTemplatesType" substitutionGroup="mule:abstract-message-processor" name="purge-templates">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='templates'
which Returns all pages transcluded on the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeTemplatesType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtlnamespace">
          <xs:annotation>
            <xs:documentation>- how templates in this namespaces only. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gtllimit">
          <xs:annotation>
            <xs:documentation>- How many templates to return.No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtltemplates">
          <xs:annotation>
            <xs:documentation>- Only list these templates. Useful for checking whether a certain page uses a certain template. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gtldir">
          <xs:annotation>
            <xs:documentation>- The direction in which to list. One value: ascending, descending.Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeTranscludedinType" substitutionGroup="mule:abstract-message-processor" name="purge-transcludedin">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='transcludedin' which Find all pages that transclude the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeTranscludedinType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="pageid|title|redirect" name="gtiprop">
          <xs:annotation>
            <xs:documentation>- Which properties to get: pageid Page ID of each page. title Title of each page. redirect Flag if the page is a redirect. Values (separate with |): pageid, title, redirect Default: pageid|title|redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtinamespace">
          <xs:annotation>
            <xs:documentation>- Only include pages in these namespaces. Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gtishow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria: redirect Only show redirects. !redirect Only show non-redirects.Values (separate with |): redirect, !redirect</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gtilimit">
          <xs:annotation>
            <xs:documentation>- How many to return. No more than 500 (5,000 for bots) allowed.Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gticontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeWatchListType" substitutionGroup="mule:abstract-message-processor" name="purge-watch-list">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type ='watchlist'
which Find all pages that transclude the given pages.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeWatchListType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlallrev">
          <xs:annotation>
            <xs:documentation>- Include multiple revisions of the same page within given timeframe.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlstart">
          <xs:annotation>
            <xs:documentation>- The timestamp to start enumerating from.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlend">
          <xs:annotation>
            <xs:documentation>- The timestamp to end enumerating.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlnamespace">
          <xs:annotation>
            <xs:documentation>- Filter changes to only the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829 wluser Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwluser">
          <xs:annotation>
            <xs:documentation>- Only list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlexcludeuser">
          <xs:annotation>
            <xs:documentation>- Don't list changes by this user.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gwldir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wlstart has to be before wlend. older List newest first (default). Note: wlstart has to be later than wlend. One value: newer, older Default: older</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gwllimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ids|title|flags" name="gwlprop">
          <xs:annotation>
            <xs:documentation>- Which additional items to get:  ids Adds revision IDs and page IDs. title Adds title of the page. flags Adds flags for the edit. user Adds the user who made the edit. userid Adds user ID of whom made the edit. comment Adds comment of the edit. parsedcomment Adds parsed comment of the edit. timestamp Adds timestamp of the edit. patrol Tags edits that are patrolled. sizes Adds the old and new lengths of the page. notificationtimestamp Adds timestamp of when the user was last notified about the edit. loginfo Adds log information where appropriate. Values (separate with |): ids, title, flags, user, userid, comment, parsedcomment, timestamp, patrol, sizes, notificationtimestamp, loginfo Default: ids|title|flags</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlshow">
          <xs:annotation>
            <xs:documentation>- Show only items that meet these criteria. For example, to see only minor edits done by logged-in users, set wlshow=minor|!anon.  Values (separate with |): minor, !minor, bot, !bot, anon, !anon, patrolled, !patrolled, unread, !unread</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="edit|new|log" name="gwltype">
          <xs:annotation>
            <xs:documentation>- Which types of changes to show:  edit Regular page edits. external External changes. new Page creations. log Log entries. Values (separate with |): edit, external, new, log Default: edit|new|log</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlowner">
          <xs:annotation>
            <xs:documentation>- Used along with wltoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwltoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwlcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="PurgeWatchListRawType" substitutionGroup="mule:abstract-message-processor" name="purge-watch-list-raw">
    <xs:annotation>
      <xs:documentation>Purge the cache for the given titles with the generator type
='watchlistraw' which Get all pages on the current user's watchlist.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PurgeWatchListRawType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links tables.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="forcerecursivelinkupdate">
          <xs:annotation>
            <xs:documentation>- Update the links table, and update the links tables for any page that uses this page as a template.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="continueStr">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="titles">
          <xs:annotation>
            <xs:documentation>- A list of titles to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="pageids">
          <xs:annotation>
            <xs:documentation>- A list of page IDs to work on. Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="revids">
          <xs:annotation>
            <xs:documentation>- A list of revision IDs to work on.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrcontinue">
          <xs:annotation>
            <xs:documentation>- When more results are available, use this to continue.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrnamespace">
          <xs:annotation>
            <xs:documentation>- Only list pages in the given namespaces.  Values (separate with |): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 120, 121, 122, 123, 1198, 1199, 2600, 828, 829</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="10" name="gwrlimit">
          <xs:annotation>
            <xs:documentation>- How many total results to return per request.  No more than 500 (5,000 for bots) allowed. Default: 10</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrprop">
          <xs:annotation>
            <xs:documentation>- Which additional properties to get:  changed Adds timestamp of when the user was last notified about the edit. Values (separate with |): changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrshow">
          <xs:annotation>
            <xs:documentation>- Only list items that meet these criteria.  Values (separate with |): changed, !changed</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="gwrowner">
          <xs:annotation>
            <xs:documentation>- Used along with wrtoken to access a different user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="older" name="gwrtoken">
          <xs:annotation>
            <xs:documentation>- A security token (available in the user's preferences) to allow access to another user's watchlist.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="ascending" name="gwrdir">
          <xs:annotation>
            <xs:documentation>- In which direction to enumerate:  newer List oldest first. Note: wrstart has to be before wrend. older List newest first (default). Note: wrstart has to be later than wrend. One value: ascending, descending Default: ascending</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="redirects">
          <xs:annotation>
            <xs:documentation>- Automatically resolve redirects in titles, pageids, and revids, and in pages returned by generator.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="converttitles">
          <xs:annotation>
            <xs:documentation>- Convert titles to other variants if necessary. Only works if the wiki's content language supports variant conversion. Languages that support variant conversion include gan, iu, kk, ku, shi, sr, tg, uz, zh. * @param maxlag - Maximum lag can be used when MediaWiki is installed on a database replicated cluster. To save actions causing any more site replication lag, this parameter can make the client wait until the replication lag is less than the specified value. In case of excessive lag, error code maxlag is returned with a message like Waiting for $host: $lag seconds lagged.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="maxlag">
          <xs:annotation>
            <xs:documentation></xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="smaxage">
          <xs:annotation>
            <xs:documentation>- Set the s-maxage header to this many seconds. Errors are never cached.Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="0" name="maxage">
          <xs:annotation>
            <xs:documentation>- Set the max-age header to this many seconds. Errors are never cached. Default: 0</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="assertUser">
          <xs:annotation>
            <xs:documentation>- Verify the user is logged in if set to user, or has the bot userright if bot.One value: user, bot</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="requestid">
          <xs:annotation>
            <xs:documentation>- Any value given here will be included in the response. May be used to distinguish requests.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="servedby">
          <xs:annotation>
            <xs:documentation>- Include the hostname that served the request in the results.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="curtimestamp">
          <xs:annotation>
            <xs:documentation>- Include the current timestamp in the result.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="origin">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), set this to the originating domain. This must be included in any pre-flight request, and therefore must be part of the request URI (not the POST body). This must match one of the origins in the Origin header exactly, so it has to be set to something like https://en.wikipedia.org or https://meta.wikimedia.org. If this parameter does not match the Origin header, a 403 response will be returned. If this parameter matches the Origin header and the origin is whitelisted, an Access-Control-Allow-Origin header will be set.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="user" name="uselang">
          <xs:annotation>
            <xs:documentation>- Language to use for message translations. A list of codes may be fetched from action=query&amp;meta=siteinfo with siprop=languages, or specify user to use the current user's language preference, or specify content to use this wiki's content language.Default: user</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="centralauthtoken">
          <xs:annotation>
            <xs:documentation>- When accessing the API using a cross-domain AJAX request (CORS), use this to authenticate as the current SUL user. Use action=centralauthtoken on this wiki to retrieve the token, before making the CORS request. Each token may only be used once, and expires after 10 seconds. This should be included in any pre-flight request, and therefore should be included in the request URI (not the POST body).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/wiki-pedia" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="GetParamInfoType" substitutionGroup="mule:abstract-message-processor" name="get-param-info">
    <xs:annotation>
      <xs:documentation>Obtain information about API modules.</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="GetParamInfoType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:attribute type="xs:string" use="required" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="json" name="format">
          <xs:annotation>
            <xs:documentation>- The format of the output.Default Json</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="modules">
          <xs:annotation>
            <xs:documentation>- List of module names (values of the action and format parameters, or main). Can specify submodules with a +.Separate values with |. Maximum number of values is 50 (500 for bots).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" default="none" name="helpformat">
          <xs:annotation>
            <xs:documentation>- Format of help strings. One value: html, wikitext, raw, none. Default: none</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="OnNoTokenPolicyEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EXCEPTION"></xs:enumeration>
          <xs:enumeration value="STOP_FLOW"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="integerType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:integer"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="decimalType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:decimal"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="floatType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:float"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="doubleType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:double"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="dateTimeType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:dateTime"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="longType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:long"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="byteType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:byte"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="booleanType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:boolean"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="anyUriType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:anyURI"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="charType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"></xs:minLength>
          <xs:maxLength value="1"></xs:maxLength>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>